//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Incident_Reporting_App_Server.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IncidentReporting_WSSoap", Namespace="http://tempuri.org/")]
    public partial class IncidentReporting_WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Buildings_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_Select_By_BuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_Select_By_BuildingNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_Select_By_CompanyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_Select_By_FloorsNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_AccidentNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_CompanyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_DateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_EquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_LossesTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_TimeToArriveOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_TimeToSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Accident_Select_By_VehiclesToAccidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_AreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_AvailabilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_FF_ManPowerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_JobOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_OfficerNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_PointOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_RankOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_SectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_TimeSlotOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_UserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_By_FF_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExitPathways_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExitPathways_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExitPathways_Select_By_BuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_AccidentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_AgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_Civil_MilitaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_DateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_DeathIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_NameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Death_Select_By_RankOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_By_CompanyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_By_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_By_FireMediatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_By_HazardousSubstanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback DangerousPlaces_Select_By_LocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_BackCompanyBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_BackCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_BackFireMediatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_BuildingsNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_CompanyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_ElectricalPanelLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_FrontCompanyBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_FrontCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_FrontFireMediatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_GasTrapLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_LandlinePhoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_LeftCompanyBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_LeftCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_LeftFireMediatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_NameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_OxygenTrapLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_RightCompanyBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_RightCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_RightFireMediatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback Company_Select_By_UserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Managers_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Managers_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Managers_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Managers_Select_By_CompanyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Managers_SelectByManagerIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Buildings_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Select_Users_Of_UserOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_SelectByUserIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_SelectByNamePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_SelectByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Select_Super_AdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Admin_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Admin_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Admin_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Admin_SelectByAdminIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback Users_Admin_SelectByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_AccidentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_AgeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_Civil_MilitaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_DateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_InjuredIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_NameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Injured_Select_By_RankOperationCompleted;
        
        private System.Threading.SendOrPostCallback Images_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Images_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Images_Select_By_BuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Images_Select_By_ImageDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_UpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_BuildingIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_PowderExtinguishersNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_FoamExtinguishersNumbersOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_PowderExtinguishersWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback Floors_Select_By_FoamExtinguishersWeightOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_AreaNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_CarsNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_EquipmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_FF_IDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_OfficersNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_SectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_SignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_SoliderNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_StreetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_UserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FFstations_Select_By_ZoneNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_AllOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_AddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_AreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_FF_pumpsIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_PumpNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_SectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_SignsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_pumps_Select_By_StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_DeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_InsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback FF_ManPower_Select_AllOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IncidentReporting_WS() {
            this.Url = global::Incident_Reporting_App_Server.Properties.Settings.Default.Incident_Reporting_App_Server_localhost_IncidentReporting_WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Buildings_Select_AllCompletedEventHandler Buildings_Select_AllCompleted;
        
        /// <remarks/>
        public event Buildings_Select_By_BuildingIDCompletedEventHandler Buildings_Select_By_BuildingIDCompleted;
        
        /// <remarks/>
        public event Buildings_Select_By_BuildingNumberCompletedEventHandler Buildings_Select_By_BuildingNumberCompleted;
        
        /// <remarks/>
        public event Buildings_Select_By_CompanyIDCompletedEventHandler Buildings_Select_By_CompanyIDCompleted;
        
        /// <remarks/>
        public event Buildings_Select_By_FloorsNumberCompletedEventHandler Buildings_Select_By_FloorsNumberCompleted;
        
        /// <remarks/>
        public event Accident_DeleteCompletedEventHandler Accident_DeleteCompleted;
        
        /// <remarks/>
        public event Accident_InsertCompletedEventHandler Accident_InsertCompleted;
        
        /// <remarks/>
        public event Accident_Select_AllCompletedEventHandler Accident_Select_AllCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_AccidentNumberCompletedEventHandler Accident_Select_By_AccidentNumberCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_CompanyIDCompletedEventHandler Accident_Select_By_CompanyIDCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_DateCompletedEventHandler Accident_Select_By_DateCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_EquipmentsCompletedEventHandler Accident_Select_By_EquipmentsCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_IDCompletedEventHandler Accident_Select_By_IDCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_LossesTypeCompletedEventHandler Accident_Select_By_LossesTypeCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_TimeToArriveCompletedEventHandler Accident_Select_By_TimeToArriveCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_TimeToSendCompletedEventHandler Accident_Select_By_TimeToSendCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_TypeCompletedEventHandler Accident_Select_By_TypeCompleted;
        
        /// <remarks/>
        public event Accident_Select_By_VehiclesToAccidentCompletedEventHandler Accident_Select_By_VehiclesToAccidentCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_AreaCompletedEventHandler FF_ManPower_Select_By_AreaCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_AvailabilityCompletedEventHandler FF_ManPower_Select_By_AvailabilityCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_FF_ManPowerIDCompletedEventHandler FF_ManPower_Select_By_FF_ManPowerIDCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_JobCompletedEventHandler FF_ManPower_Select_By_JobCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_OfficerNameCompletedEventHandler FF_ManPower_Select_By_OfficerNameCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_PointCompletedEventHandler FF_ManPower_Select_By_PointCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_RankCompletedEventHandler FF_ManPower_Select_By_RankCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_SectorCompletedEventHandler FF_ManPower_Select_By_SectorCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_TimeSlotCompletedEventHandler FF_ManPower_Select_By_TimeSlotCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_UserIDCompletedEventHandler FF_ManPower_Select_By_UserIDCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_By_FF_IDCompletedEventHandler FF_ManPower_Select_By_FF_IDCompleted;
        
        /// <remarks/>
        public event ExitPathways_InsertCompletedEventHandler ExitPathways_InsertCompleted;
        
        /// <remarks/>
        public event ExitPathways_Select_AllCompletedEventHandler ExitPathways_Select_AllCompleted;
        
        /// <remarks/>
        public event ExitPathways_Select_By_BuildingIDCompletedEventHandler ExitPathways_Select_By_BuildingIDCompleted;
        
        /// <remarks/>
        public event Death_DeleteCompletedEventHandler Death_DeleteCompleted;
        
        /// <remarks/>
        public event Death_InsertCompletedEventHandler Death_InsertCompleted;
        
        /// <remarks/>
        public event Death_Select_AllCompletedEventHandler Death_Select_AllCompleted;
        
        /// <remarks/>
        public event Death_Select_By_AccidentIDCompletedEventHandler Death_Select_By_AccidentIDCompleted;
        
        /// <remarks/>
        public event Death_Select_By_AgeCompletedEventHandler Death_Select_By_AgeCompleted;
        
        /// <remarks/>
        public event Death_Select_By_Civil_MilitaryCompletedEventHandler Death_Select_By_Civil_MilitaryCompleted;
        
        /// <remarks/>
        public event Death_Select_By_DateCompletedEventHandler Death_Select_By_DateCompleted;
        
        /// <remarks/>
        public event Death_Select_By_DeathIDCompletedEventHandler Death_Select_By_DeathIDCompleted;
        
        /// <remarks/>
        public event Death_Select_By_NameCompletedEventHandler Death_Select_By_NameCompleted;
        
        /// <remarks/>
        public event Death_Select_By_RankCompletedEventHandler Death_Select_By_RankCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_InsertCompletedEventHandler DangerousPlaces_InsertCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_UpdateCompletedEventHandler DangerousPlaces_UpdateCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_AllCompletedEventHandler DangerousPlaces_Select_AllCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_By_CompanyIDCompletedEventHandler DangerousPlaces_Select_By_CompanyIDCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_By_IDCompletedEventHandler DangerousPlaces_Select_By_IDCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_By_FireMediatorCompletedEventHandler DangerousPlaces_Select_By_FireMediatorCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_By_HazardousSubstanceCompletedEventHandler DangerousPlaces_Select_By_HazardousSubstanceCompleted;
        
        /// <remarks/>
        public event DangerousPlaces_Select_By_LocationCompletedEventHandler DangerousPlaces_Select_By_LocationCompleted;
        
        /// <remarks/>
        public event Company_DeleteCompletedEventHandler Company_DeleteCompleted;
        
        /// <remarks/>
        public event Company_InsertCompletedEventHandler Company_InsertCompleted;
        
        /// <remarks/>
        public event Company_UpdateCompletedEventHandler Company_UpdateCompleted;
        
        /// <remarks/>
        public event Company_Select_AllCompletedEventHandler Company_Select_AllCompleted;
        
        /// <remarks/>
        public event Company_Select_By_AddressCompletedEventHandler Company_Select_By_AddressCompleted;
        
        /// <remarks/>
        public event Company_Select_By_BackCompanyBusinessCompletedEventHandler Company_Select_By_BackCompanyBusinessCompleted;
        
        /// <remarks/>
        public event Company_Select_By_BackCompanyNameCompletedEventHandler Company_Select_By_BackCompanyNameCompleted;
        
        /// <remarks/>
        public event Company_Select_By_BackFireMediatorCompletedEventHandler Company_Select_By_BackFireMediatorCompleted;
        
        /// <remarks/>
        public event Company_Select_By_BuildingsNumberCompletedEventHandler Company_Select_By_BuildingsNumberCompleted;
        
        /// <remarks/>
        public event Company_Select_By_CompanyIDCompletedEventHandler Company_Select_By_CompanyIDCompleted;
        
        /// <remarks/>
        public event Company_Select_By_ElectricalPanelLocationCompletedEventHandler Company_Select_By_ElectricalPanelLocationCompleted;
        
        /// <remarks/>
        public event Company_Select_By_FrontCompanyBusinessCompletedEventHandler Company_Select_By_FrontCompanyBusinessCompleted;
        
        /// <remarks/>
        public event Company_Select_By_FrontCompanyNameCompletedEventHandler Company_Select_By_FrontCompanyNameCompleted;
        
        /// <remarks/>
        public event Company_Select_By_FrontFireMediatorCompletedEventHandler Company_Select_By_FrontFireMediatorCompleted;
        
        /// <remarks/>
        public event Company_Select_By_GasTrapLocationCompletedEventHandler Company_Select_By_GasTrapLocationCompleted;
        
        /// <remarks/>
        public event Company_Select_By_LandlinePhoneNumberCompletedEventHandler Company_Select_By_LandlinePhoneNumberCompleted;
        
        /// <remarks/>
        public event Company_Select_By_LeftCompanyBusinessCompletedEventHandler Company_Select_By_LeftCompanyBusinessCompleted;
        
        /// <remarks/>
        public event Company_Select_By_LeftCompanyNameCompletedEventHandler Company_Select_By_LeftCompanyNameCompleted;
        
        /// <remarks/>
        public event Company_Select_By_LeftFireMediatorCompletedEventHandler Company_Select_By_LeftFireMediatorCompleted;
        
        /// <remarks/>
        public event Company_Select_By_NameCompletedEventHandler Company_Select_By_NameCompleted;
        
        /// <remarks/>
        public event Company_Select_By_OxygenTrapLocationCompletedEventHandler Company_Select_By_OxygenTrapLocationCompleted;
        
        /// <remarks/>
        public event Company_Select_By_RightCompanyBusinessCompletedEventHandler Company_Select_By_RightCompanyBusinessCompleted;
        
        /// <remarks/>
        public event Company_Select_By_RightCompanyNameCompletedEventHandler Company_Select_By_RightCompanyNameCompleted;
        
        /// <remarks/>
        public event Company_Select_By_RightFireMediatorCompletedEventHandler Company_Select_By_RightFireMediatorCompleted;
        
        /// <remarks/>
        public event Company_Select_By_UserIDCompletedEventHandler Company_Select_By_UserIDCompleted;
        
        /// <remarks/>
        public event Managers_DeleteCompletedEventHandler Managers_DeleteCompleted;
        
        /// <remarks/>
        public event Managers_InsertCompletedEventHandler Managers_InsertCompleted;
        
        /// <remarks/>
        public event Managers_Select_AllCompletedEventHandler Managers_Select_AllCompleted;
        
        /// <remarks/>
        public event Managers_Select_By_CompanyIDCompletedEventHandler Managers_Select_By_CompanyIDCompleted;
        
        /// <remarks/>
        public event Managers_SelectByManagerIDCompletedEventHandler Managers_SelectByManagerIDCompleted;
        
        /// <remarks/>
        public event Buildings_DeleteCompletedEventHandler Buildings_DeleteCompleted;
        
        /// <remarks/>
        public event Buildings_InsertCompletedEventHandler Buildings_InsertCompleted;
        
        /// <remarks/>
        public event Users_DeleteCompletedEventHandler Users_DeleteCompleted;
        
        /// <remarks/>
        public event Users_InsertCompletedEventHandler Users_InsertCompleted;
        
        /// <remarks/>
        public event Users_Select_AllCompletedEventHandler Users_Select_AllCompleted;
        
        /// <remarks/>
        public event Users_Select_Users_Of_UserCompletedEventHandler Users_Select_Users_Of_UserCompleted;
        
        /// <remarks/>
        public event Users_SelectByUserIdCompletedEventHandler Users_SelectByUserIdCompleted;
        
        /// <remarks/>
        public event Users_SelectByNamePassCompletedEventHandler Users_SelectByNamePassCompleted;
        
        /// <remarks/>
        public event Users_SelectByNameCompletedEventHandler Users_SelectByNameCompleted;
        
        /// <remarks/>
        public event Users_Select_Super_AdminCompletedEventHandler Users_Select_Super_AdminCompleted;
        
        /// <remarks/>
        public event Users_Admin_DeleteCompletedEventHandler Users_Admin_DeleteCompleted;
        
        /// <remarks/>
        public event Users_Admin_InsertCompletedEventHandler Users_Admin_InsertCompleted;
        
        /// <remarks/>
        public event Users_Admin_Select_AllCompletedEventHandler Users_Admin_Select_AllCompleted;
        
        /// <remarks/>
        public event Users_Admin_SelectByAdminIdCompletedEventHandler Users_Admin_SelectByAdminIdCompleted;
        
        /// <remarks/>
        public event Users_Admin_SelectByUserIDCompletedEventHandler Users_Admin_SelectByUserIDCompleted;
        
        /// <remarks/>
        public event Injured_DeleteCompletedEventHandler Injured_DeleteCompleted;
        
        /// <remarks/>
        public event Injured_InsertCompletedEventHandler Injured_InsertCompleted;
        
        /// <remarks/>
        public event Injured_Select_AllCompletedEventHandler Injured_Select_AllCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_AccidentIDCompletedEventHandler Injured_Select_By_AccidentIDCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_AgeCompletedEventHandler Injured_Select_By_AgeCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_Civil_MilitaryCompletedEventHandler Injured_Select_By_Civil_MilitaryCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_DateCompletedEventHandler Injured_Select_By_DateCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_InjuredIDCompletedEventHandler Injured_Select_By_InjuredIDCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_NameCompletedEventHandler Injured_Select_By_NameCompleted;
        
        /// <remarks/>
        public event Injured_Select_By_RankCompletedEventHandler Injured_Select_By_RankCompleted;
        
        /// <remarks/>
        public event Images_InsertCompletedEventHandler Images_InsertCompleted;
        
        /// <remarks/>
        public event Images_Select_AllCompletedEventHandler Images_Select_AllCompleted;
        
        /// <remarks/>
        public event Images_Select_By_BuildingIDCompletedEventHandler Images_Select_By_BuildingIDCompleted;
        
        /// <remarks/>
        public event Images_Select_By_ImageDescriptionCompletedEventHandler Images_Select_By_ImageDescriptionCompleted;
        
        /// <remarks/>
        public event Floors_InsertCompletedEventHandler Floors_InsertCompleted;
        
        /// <remarks/>
        public event Floors_UpdateCompletedEventHandler Floors_UpdateCompleted;
        
        /// <remarks/>
        public event Floors_Select_AllCompletedEventHandler Floors_Select_AllCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_BuildingIDCompletedEventHandler Floors_Select_By_BuildingIDCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventHandler Floors_Select_By_CarbonDioxideExtinguishersNumbersCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_PowderExtinguishersNumberCompletedEventHandler Floors_Select_By_PowderExtinguishersNumberCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_FoamExtinguishersNumbersCompletedEventHandler Floors_Select_By_FoamExtinguishersNumbersCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_PowderExtinguishersWeightCompletedEventHandler Floors_Select_By_PowderExtinguishersWeightCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventHandler Floors_Select_By_CarbonDioxideExtinguishersWeightCompleted;
        
        /// <remarks/>
        public event Floors_Select_By_FoamExtinguishersWeightCompletedEventHandler Floors_Select_By_FoamExtinguishersWeightCompleted;
        
        /// <remarks/>
        public event FFstations_DeleteCompletedEventHandler FFstations_DeleteCompleted;
        
        /// <remarks/>
        public event FFstations_InsertCompletedEventHandler FFstations_InsertCompleted;
        
        /// <remarks/>
        public event FFstations_Select_AllCompletedEventHandler FFstations_Select_AllCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_AreaNameCompletedEventHandler FFstations_Select_By_AreaNameCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_CarsNumberCompletedEventHandler FFstations_Select_By_CarsNumberCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_EquipmentsCompletedEventHandler FFstations_Select_By_EquipmentsCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_FF_IDCompletedEventHandler FFstations_Select_By_FF_IDCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_OfficersNumberCompletedEventHandler FFstations_Select_By_OfficersNumberCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_SectorCompletedEventHandler FFstations_Select_By_SectorCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_SignsCompletedEventHandler FFstations_Select_By_SignsCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_SoliderNumberCompletedEventHandler FFstations_Select_By_SoliderNumberCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_StreetCompletedEventHandler FFstations_Select_By_StreetCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_UserIDCompletedEventHandler FFstations_Select_By_UserIDCompleted;
        
        /// <remarks/>
        public event FFstations_Select_By_ZoneNumberCompletedEventHandler FFstations_Select_By_ZoneNumberCompleted;
        
        /// <remarks/>
        public event FF_pumps_DeleteCompletedEventHandler FF_pumps_DeleteCompleted;
        
        /// <remarks/>
        public event FF_pumps_InsertCompletedEventHandler FF_pumps_InsertCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_AllCompletedEventHandler FF_pumps_Select_AllCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_AddressCompletedEventHandler FF_pumps_Select_By_AddressCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_AreaCompletedEventHandler FF_pumps_Select_By_AreaCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_FF_pumpsIDCompletedEventHandler FF_pumps_Select_By_FF_pumpsIDCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_PumpNumberCompletedEventHandler FF_pumps_Select_By_PumpNumberCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_SectorCompletedEventHandler FF_pumps_Select_By_SectorCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_SignsCompletedEventHandler FF_pumps_Select_By_SignsCompleted;
        
        /// <remarks/>
        public event FF_pumps_Select_By_StatusCompletedEventHandler FF_pumps_Select_By_StatusCompleted;
        
        /// <remarks/>
        public event FF_ManPower_DeleteCompletedEventHandler FF_ManPower_DeleteCompleted;
        
        /// <remarks/>
        public event FF_ManPower_InsertCompletedEventHandler FF_ManPower_InsertCompleted;
        
        /// <remarks/>
        public event FF_ManPower_Select_AllCompletedEventHandler FF_ManPower_Select_AllCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings[] Buildings_Select_All(string username, string password) {
            object[] results = this.Invoke("Buildings_Select_All", new object[] {
                        username,
                        password});
            return ((Buildings[])(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_Select_AllAsync(string username, string password) {
            this.Buildings_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Buildings_Select_AllAsync(string username, string password, object userState) {
            if ((this.Buildings_Select_AllOperationCompleted == null)) {
                this.Buildings_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Buildings_Select_All", new object[] {
                        username,
                        password}, this.Buildings_Select_AllOperationCompleted, userState);
        }
        
        private void OnBuildings_Select_AllOperationCompleted(object arg) {
            if ((this.Buildings_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_Select_AllCompleted(this, new Buildings_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Select_By_BuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings Buildings_Select_By_BuildingID(string username, string password, int ID) {
            object[] results = this.Invoke("Buildings_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        ID});
            return ((Buildings)(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_Select_By_BuildingIDAsync(string username, string password, int ID) {
            this.Buildings_Select_By_BuildingIDAsync(username, password, ID, null);
        }
        
        /// <remarks/>
        public void Buildings_Select_By_BuildingIDAsync(string username, string password, int ID, object userState) {
            if ((this.Buildings_Select_By_BuildingIDOperationCompleted == null)) {
                this.Buildings_Select_By_BuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_Select_By_BuildingIDOperationCompleted);
            }
            this.InvokeAsync("Buildings_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        ID}, this.Buildings_Select_By_BuildingIDOperationCompleted, userState);
        }
        
        private void OnBuildings_Select_By_BuildingIDOperationCompleted(object arg) {
            if ((this.Buildings_Select_By_BuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_Select_By_BuildingIDCompleted(this, new Buildings_Select_By_BuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Select_By_BuildingNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings[] Buildings_Select_By_BuildingNumber(string username, string password, int BuildingNumber) {
            object[] results = this.Invoke("Buildings_Select_By_BuildingNumber", new object[] {
                        username,
                        password,
                        BuildingNumber});
            return ((Buildings[])(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_Select_By_BuildingNumberAsync(string username, string password, int BuildingNumber) {
            this.Buildings_Select_By_BuildingNumberAsync(username, password, BuildingNumber, null);
        }
        
        /// <remarks/>
        public void Buildings_Select_By_BuildingNumberAsync(string username, string password, int BuildingNumber, object userState) {
            if ((this.Buildings_Select_By_BuildingNumberOperationCompleted == null)) {
                this.Buildings_Select_By_BuildingNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_Select_By_BuildingNumberOperationCompleted);
            }
            this.InvokeAsync("Buildings_Select_By_BuildingNumber", new object[] {
                        username,
                        password,
                        BuildingNumber}, this.Buildings_Select_By_BuildingNumberOperationCompleted, userState);
        }
        
        private void OnBuildings_Select_By_BuildingNumberOperationCompleted(object arg) {
            if ((this.Buildings_Select_By_BuildingNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_Select_By_BuildingNumberCompleted(this, new Buildings_Select_By_BuildingNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Select_By_CompanyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings[] Buildings_Select_By_CompanyID(string username, string password, int CompanyID) {
            object[] results = this.Invoke("Buildings_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((Buildings[])(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_Select_By_CompanyIDAsync(string username, string password, int CompanyID) {
            this.Buildings_Select_By_CompanyIDAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void Buildings_Select_By_CompanyIDAsync(string username, string password, int CompanyID, object userState) {
            if ((this.Buildings_Select_By_CompanyIDOperationCompleted == null)) {
                this.Buildings_Select_By_CompanyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_Select_By_CompanyIDOperationCompleted);
            }
            this.InvokeAsync("Buildings_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID}, this.Buildings_Select_By_CompanyIDOperationCompleted, userState);
        }
        
        private void OnBuildings_Select_By_CompanyIDOperationCompleted(object arg) {
            if ((this.Buildings_Select_By_CompanyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_Select_By_CompanyIDCompleted(this, new Buildings_Select_By_CompanyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Select_By_FloorsNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings[] Buildings_Select_By_FloorsNumber(string username, string password, int FloorsNumber) {
            object[] results = this.Invoke("Buildings_Select_By_FloorsNumber", new object[] {
                        username,
                        password,
                        FloorsNumber});
            return ((Buildings[])(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_Select_By_FloorsNumberAsync(string username, string password, int FloorsNumber) {
            this.Buildings_Select_By_FloorsNumberAsync(username, password, FloorsNumber, null);
        }
        
        /// <remarks/>
        public void Buildings_Select_By_FloorsNumberAsync(string username, string password, int FloorsNumber, object userState) {
            if ((this.Buildings_Select_By_FloorsNumberOperationCompleted == null)) {
                this.Buildings_Select_By_FloorsNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_Select_By_FloorsNumberOperationCompleted);
            }
            this.InvokeAsync("Buildings_Select_By_FloorsNumber", new object[] {
                        username,
                        password,
                        FloorsNumber}, this.Buildings_Select_By_FloorsNumberOperationCompleted, userState);
        }
        
        private void OnBuildings_Select_By_FloorsNumberOperationCompleted(object arg) {
            if ((this.Buildings_Select_By_FloorsNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_Select_By_FloorsNumberCompleted(this, new Buildings_Select_By_FloorsNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Accident_Delete(string username, string password, int accidentid) {
            object[] results = this.Invoke("Accident_Delete", new object[] {
                        username,
                        password,
                        accidentid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Accident_DeleteAsync(string username, string password, int accidentid) {
            this.Accident_DeleteAsync(username, password, accidentid, null);
        }
        
        /// <remarks/>
        public void Accident_DeleteAsync(string username, string password, int accidentid, object userState) {
            if ((this.Accident_DeleteOperationCompleted == null)) {
                this.Accident_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_DeleteOperationCompleted);
            }
            this.InvokeAsync("Accident_Delete", new object[] {
                        username,
                        password,
                        accidentid}, this.Accident_DeleteOperationCompleted, userState);
        }
        
        private void OnAccident_DeleteOperationCompleted(object arg) {
            if ((this.Accident_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_DeleteCompleted(this, new Accident_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident Accident_Insert(string username, string password, Accident accident) {
            object[] results = this.Invoke("Accident_Insert", new object[] {
                        username,
                        password,
                        accident});
            return ((Accident)(results[0]));
        }
        
        /// <remarks/>
        public void Accident_InsertAsync(string username, string password, Accident accident) {
            this.Accident_InsertAsync(username, password, accident, null);
        }
        
        /// <remarks/>
        public void Accident_InsertAsync(string username, string password, Accident accident, object userState) {
            if ((this.Accident_InsertOperationCompleted == null)) {
                this.Accident_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_InsertOperationCompleted);
            }
            this.InvokeAsync("Accident_Insert", new object[] {
                        username,
                        password,
                        accident}, this.Accident_InsertOperationCompleted, userState);
        }
        
        private void OnAccident_InsertOperationCompleted(object arg) {
            if ((this.Accident_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_InsertCompleted(this, new Accident_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_All(string username, string password) {
            object[] results = this.Invoke("Accident_Select_All", new object[] {
                        username,
                        password});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_AllAsync(string username, string password) {
            this.Accident_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Accident_Select_AllAsync(string username, string password, object userState) {
            if ((this.Accident_Select_AllOperationCompleted == null)) {
                this.Accident_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_All", new object[] {
                        username,
                        password}, this.Accident_Select_AllOperationCompleted, userState);
        }
        
        private void OnAccident_Select_AllOperationCompleted(object arg) {
            if ((this.Accident_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_AllCompleted(this, new Accident_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_AccidentNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident Accident_Select_By_AccidentNumber(string username, string password, int AccidentNumber) {
            object[] results = this.Invoke("Accident_Select_By_AccidentNumber", new object[] {
                        username,
                        password,
                        AccidentNumber});
            return ((Accident)(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_AccidentNumberAsync(string username, string password, int AccidentNumber) {
            this.Accident_Select_By_AccidentNumberAsync(username, password, AccidentNumber, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_AccidentNumberAsync(string username, string password, int AccidentNumber, object userState) {
            if ((this.Accident_Select_By_AccidentNumberOperationCompleted == null)) {
                this.Accident_Select_By_AccidentNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_AccidentNumberOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_AccidentNumber", new object[] {
                        username,
                        password,
                        AccidentNumber}, this.Accident_Select_By_AccidentNumberOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_AccidentNumberOperationCompleted(object arg) {
            if ((this.Accident_Select_By_AccidentNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_AccidentNumberCompleted(this, new Accident_Select_By_AccidentNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_CompanyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_CompanyID(string username, string password, int CompanyID) {
            object[] results = this.Invoke("Accident_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_CompanyIDAsync(string username, string password, int CompanyID) {
            this.Accident_Select_By_CompanyIDAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_CompanyIDAsync(string username, string password, int CompanyID, object userState) {
            if ((this.Accident_Select_By_CompanyIDOperationCompleted == null)) {
                this.Accident_Select_By_CompanyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_CompanyIDOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID}, this.Accident_Select_By_CompanyIDOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_CompanyIDOperationCompleted(object arg) {
            if ((this.Accident_Select_By_CompanyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_CompanyIDCompleted(this, new Accident_Select_By_CompanyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_Date", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_Date(string username, string password, System.DateTime date) {
            object[] results = this.Invoke("Accident_Select_By_Date", new object[] {
                        username,
                        password,
                        date});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_DateAsync(string username, string password, System.DateTime date) {
            this.Accident_Select_By_DateAsync(username, password, date, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_DateAsync(string username, string password, System.DateTime date, object userState) {
            if ((this.Accident_Select_By_DateOperationCompleted == null)) {
                this.Accident_Select_By_DateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_DateOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_Date", new object[] {
                        username,
                        password,
                        date}, this.Accident_Select_By_DateOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_DateOperationCompleted(object arg) {
            if ((this.Accident_Select_By_DateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_DateCompleted(this, new Accident_Select_By_DateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_Equipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_Equipments(string username, string password, string equipments) {
            object[] results = this.Invoke("Accident_Select_By_Equipments", new object[] {
                        username,
                        password,
                        equipments});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_EquipmentsAsync(string username, string password, string equipments) {
            this.Accident_Select_By_EquipmentsAsync(username, password, equipments, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_EquipmentsAsync(string username, string password, string equipments, object userState) {
            if ((this.Accident_Select_By_EquipmentsOperationCompleted == null)) {
                this.Accident_Select_By_EquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_EquipmentsOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_Equipments", new object[] {
                        username,
                        password,
                        equipments}, this.Accident_Select_By_EquipmentsOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_EquipmentsOperationCompleted(object arg) {
            if ((this.Accident_Select_By_EquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_EquipmentsCompleted(this, new Accident_Select_By_EquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident Accident_Select_By_ID(string username, string password, int ID) {
            object[] results = this.Invoke("Accident_Select_By_ID", new object[] {
                        username,
                        password,
                        ID});
            return ((Accident)(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_IDAsync(string username, string password, int ID) {
            this.Accident_Select_By_IDAsync(username, password, ID, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_IDAsync(string username, string password, int ID, object userState) {
            if ((this.Accident_Select_By_IDOperationCompleted == null)) {
                this.Accident_Select_By_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_IDOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_ID", new object[] {
                        username,
                        password,
                        ID}, this.Accident_Select_By_IDOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_IDOperationCompleted(object arg) {
            if ((this.Accident_Select_By_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_IDCompleted(this, new Accident_Select_By_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_LossesType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_LossesType(string username, string password, string LossesType) {
            object[] results = this.Invoke("Accident_Select_By_LossesType", new object[] {
                        username,
                        password,
                        LossesType});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_LossesTypeAsync(string username, string password, string LossesType) {
            this.Accident_Select_By_LossesTypeAsync(username, password, LossesType, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_LossesTypeAsync(string username, string password, string LossesType, object userState) {
            if ((this.Accident_Select_By_LossesTypeOperationCompleted == null)) {
                this.Accident_Select_By_LossesTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_LossesTypeOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_LossesType", new object[] {
                        username,
                        password,
                        LossesType}, this.Accident_Select_By_LossesTypeOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_LossesTypeOperationCompleted(object arg) {
            if ((this.Accident_Select_By_LossesTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_LossesTypeCompleted(this, new Accident_Select_By_LossesTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_TimeToArrive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_TimeToArrive(string username, string password, System.DateTime TimeToArrive) {
            object[] results = this.Invoke("Accident_Select_By_TimeToArrive", new object[] {
                        username,
                        password,
                        TimeToArrive});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_TimeToArriveAsync(string username, string password, System.DateTime TimeToArrive) {
            this.Accident_Select_By_TimeToArriveAsync(username, password, TimeToArrive, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_TimeToArriveAsync(string username, string password, System.DateTime TimeToArrive, object userState) {
            if ((this.Accident_Select_By_TimeToArriveOperationCompleted == null)) {
                this.Accident_Select_By_TimeToArriveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_TimeToArriveOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_TimeToArrive", new object[] {
                        username,
                        password,
                        TimeToArrive}, this.Accident_Select_By_TimeToArriveOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_TimeToArriveOperationCompleted(object arg) {
            if ((this.Accident_Select_By_TimeToArriveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_TimeToArriveCompleted(this, new Accident_Select_By_TimeToArriveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_TimeToSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_TimeToSend(string username, string password, System.DateTime TimeToSend) {
            object[] results = this.Invoke("Accident_Select_By_TimeToSend", new object[] {
                        username,
                        password,
                        TimeToSend});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_TimeToSendAsync(string username, string password, System.DateTime TimeToSend) {
            this.Accident_Select_By_TimeToSendAsync(username, password, TimeToSend, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_TimeToSendAsync(string username, string password, System.DateTime TimeToSend, object userState) {
            if ((this.Accident_Select_By_TimeToSendOperationCompleted == null)) {
                this.Accident_Select_By_TimeToSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_TimeToSendOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_TimeToSend", new object[] {
                        username,
                        password,
                        TimeToSend}, this.Accident_Select_By_TimeToSendOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_TimeToSendOperationCompleted(object arg) {
            if ((this.Accident_Select_By_TimeToSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_TimeToSendCompleted(this, new Accident_Select_By_TimeToSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_Type", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_Type(string username, string password, string AccidentType) {
            object[] results = this.Invoke("Accident_Select_By_Type", new object[] {
                        username,
                        password,
                        AccidentType});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_TypeAsync(string username, string password, string AccidentType) {
            this.Accident_Select_By_TypeAsync(username, password, AccidentType, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_TypeAsync(string username, string password, string AccidentType, object userState) {
            if ((this.Accident_Select_By_TypeOperationCompleted == null)) {
                this.Accident_Select_By_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_TypeOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_Type", new object[] {
                        username,
                        password,
                        AccidentType}, this.Accident_Select_By_TypeOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_TypeOperationCompleted(object arg) {
            if ((this.Accident_Select_By_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_TypeCompleted(this, new Accident_Select_By_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Accident_Select_By_VehiclesToAccident", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Accident[] Accident_Select_By_VehiclesToAccident(string username, string password, string VehiclesToAccident) {
            object[] results = this.Invoke("Accident_Select_By_VehiclesToAccident", new object[] {
                        username,
                        password,
                        VehiclesToAccident});
            return ((Accident[])(results[0]));
        }
        
        /// <remarks/>
        public void Accident_Select_By_VehiclesToAccidentAsync(string username, string password, string VehiclesToAccident) {
            this.Accident_Select_By_VehiclesToAccidentAsync(username, password, VehiclesToAccident, null);
        }
        
        /// <remarks/>
        public void Accident_Select_By_VehiclesToAccidentAsync(string username, string password, string VehiclesToAccident, object userState) {
            if ((this.Accident_Select_By_VehiclesToAccidentOperationCompleted == null)) {
                this.Accident_Select_By_VehiclesToAccidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccident_Select_By_VehiclesToAccidentOperationCompleted);
            }
            this.InvokeAsync("Accident_Select_By_VehiclesToAccident", new object[] {
                        username,
                        password,
                        VehiclesToAccident}, this.Accident_Select_By_VehiclesToAccidentOperationCompleted, userState);
        }
        
        private void OnAccident_Select_By_VehiclesToAccidentOperationCompleted(object arg) {
            if ((this.Accident_Select_By_VehiclesToAccidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Accident_Select_By_VehiclesToAccidentCompleted(this, new Accident_Select_By_VehiclesToAccidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Area", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Area(string username, string password, string Area) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Area", new object[] {
                        username,
                        password,
                        Area});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_AreaAsync(string username, string password, string Area) {
            this.FF_ManPower_Select_By_AreaAsync(username, password, Area, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_AreaAsync(string username, string password, string Area, object userState) {
            if ((this.FF_ManPower_Select_By_AreaOperationCompleted == null)) {
                this.FF_ManPower_Select_By_AreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_AreaOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Area", new object[] {
                        username,
                        password,
                        Area}, this.FF_ManPower_Select_By_AreaOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_AreaOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_AreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_AreaCompleted(this, new FF_ManPower_Select_By_AreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Availability", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Availability(string username, string password, string Availability) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Availability", new object[] {
                        username,
                        password,
                        Availability});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_AvailabilityAsync(string username, string password, string Availability) {
            this.FF_ManPower_Select_By_AvailabilityAsync(username, password, Availability, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_AvailabilityAsync(string username, string password, string Availability, object userState) {
            if ((this.FF_ManPower_Select_By_AvailabilityOperationCompleted == null)) {
                this.FF_ManPower_Select_By_AvailabilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_AvailabilityOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Availability", new object[] {
                        username,
                        password,
                        Availability}, this.FF_ManPower_Select_By_AvailabilityOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_AvailabilityOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_AvailabilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_AvailabilityCompleted(this, new FF_ManPower_Select_By_AvailabilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_FF_ManPowerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower FF_ManPower_Select_By_FF_ManPowerID(string username, string password, int FF_ManPowerID) {
            object[] results = this.Invoke("FF_ManPower_Select_By_FF_ManPowerID", new object[] {
                        username,
                        password,
                        FF_ManPowerID});
            return ((FF_ManPower)(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_FF_ManPowerIDAsync(string username, string password, int FF_ManPowerID) {
            this.FF_ManPower_Select_By_FF_ManPowerIDAsync(username, password, FF_ManPowerID, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_FF_ManPowerIDAsync(string username, string password, int FF_ManPowerID, object userState) {
            if ((this.FF_ManPower_Select_By_FF_ManPowerIDOperationCompleted == null)) {
                this.FF_ManPower_Select_By_FF_ManPowerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_FF_ManPowerIDOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_FF_ManPowerID", new object[] {
                        username,
                        password,
                        FF_ManPowerID}, this.FF_ManPower_Select_By_FF_ManPowerIDOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_FF_ManPowerIDOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_FF_ManPowerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_FF_ManPowerIDCompleted(this, new FF_ManPower_Select_By_FF_ManPowerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Job", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Job(string username, string password, string Job) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Job", new object[] {
                        username,
                        password,
                        Job});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_JobAsync(string username, string password, string Job) {
            this.FF_ManPower_Select_By_JobAsync(username, password, Job, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_JobAsync(string username, string password, string Job, object userState) {
            if ((this.FF_ManPower_Select_By_JobOperationCompleted == null)) {
                this.FF_ManPower_Select_By_JobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_JobOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Job", new object[] {
                        username,
                        password,
                        Job}, this.FF_ManPower_Select_By_JobOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_JobOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_JobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_JobCompleted(this, new FF_ManPower_Select_By_JobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_OfficerName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_OfficerName(string username, string password, string OfficerName) {
            object[] results = this.Invoke("FF_ManPower_Select_By_OfficerName", new object[] {
                        username,
                        password,
                        OfficerName});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_OfficerNameAsync(string username, string password, string OfficerName) {
            this.FF_ManPower_Select_By_OfficerNameAsync(username, password, OfficerName, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_OfficerNameAsync(string username, string password, string OfficerName, object userState) {
            if ((this.FF_ManPower_Select_By_OfficerNameOperationCompleted == null)) {
                this.FF_ManPower_Select_By_OfficerNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_OfficerNameOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_OfficerName", new object[] {
                        username,
                        password,
                        OfficerName}, this.FF_ManPower_Select_By_OfficerNameOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_OfficerNameOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_OfficerNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_OfficerNameCompleted(this, new FF_ManPower_Select_By_OfficerNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Point", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Point(string username, string password, string Point) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Point", new object[] {
                        username,
                        password,
                        Point});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_PointAsync(string username, string password, string Point) {
            this.FF_ManPower_Select_By_PointAsync(username, password, Point, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_PointAsync(string username, string password, string Point, object userState) {
            if ((this.FF_ManPower_Select_By_PointOperationCompleted == null)) {
                this.FF_ManPower_Select_By_PointOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_PointOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Point", new object[] {
                        username,
                        password,
                        Point}, this.FF_ManPower_Select_By_PointOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_PointOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_PointCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_PointCompleted(this, new FF_ManPower_Select_By_PointCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Rank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Rank(string username, string password, string Rank) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_RankAsync(string username, string password, string Rank) {
            this.FF_ManPower_Select_By_RankAsync(username, password, Rank, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_RankAsync(string username, string password, string Rank, object userState) {
            if ((this.FF_ManPower_Select_By_RankOperationCompleted == null)) {
                this.FF_ManPower_Select_By_RankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_RankOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank}, this.FF_ManPower_Select_By_RankOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_RankOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_RankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_RankCompleted(this, new FF_ManPower_Select_By_RankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_Sector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_Sector(string username, string password, string Sector) {
            object[] results = this.Invoke("FF_ManPower_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_SectorAsync(string username, string password, string Sector) {
            this.FF_ManPower_Select_By_SectorAsync(username, password, Sector, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_SectorAsync(string username, string password, string Sector, object userState) {
            if ((this.FF_ManPower_Select_By_SectorOperationCompleted == null)) {
                this.FF_ManPower_Select_By_SectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_SectorOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector}, this.FF_ManPower_Select_By_SectorOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_SectorOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_SectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_SectorCompleted(this, new FF_ManPower_Select_By_SectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_TimeSlot", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_TimeSlot(string username, string password, string TimeSlot) {
            object[] results = this.Invoke("FF_ManPower_Select_By_TimeSlot", new object[] {
                        username,
                        password,
                        TimeSlot});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_TimeSlotAsync(string username, string password, string TimeSlot) {
            this.FF_ManPower_Select_By_TimeSlotAsync(username, password, TimeSlot, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_TimeSlotAsync(string username, string password, string TimeSlot, object userState) {
            if ((this.FF_ManPower_Select_By_TimeSlotOperationCompleted == null)) {
                this.FF_ManPower_Select_By_TimeSlotOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_TimeSlotOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_TimeSlot", new object[] {
                        username,
                        password,
                        TimeSlot}, this.FF_ManPower_Select_By_TimeSlotOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_TimeSlotOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_TimeSlotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_TimeSlotCompleted(this, new FF_ManPower_Select_By_TimeSlotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_UserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_UserID(string username, string password, int UserID) {
            object[] results = this.Invoke("FF_ManPower_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_UserIDAsync(string username, string password, int UserID) {
            this.FF_ManPower_Select_By_UserIDAsync(username, password, UserID, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_UserIDAsync(string username, string password, int UserID, object userState) {
            if ((this.FF_ManPower_Select_By_UserIDOperationCompleted == null)) {
                this.FF_ManPower_Select_By_UserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_UserIDOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID}, this.FF_ManPower_Select_By_UserIDOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_UserIDOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_UserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_UserIDCompleted(this, new FF_ManPower_Select_By_UserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_By_FF_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_By_FF_ID(string username, string password, int FF_ID) {
            object[] results = this.Invoke("FF_ManPower_Select_By_FF_ID", new object[] {
                        username,
                        password,
                        FF_ID});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_FF_IDAsync(string username, string password, int FF_ID) {
            this.FF_ManPower_Select_By_FF_IDAsync(username, password, FF_ID, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_By_FF_IDAsync(string username, string password, int FF_ID, object userState) {
            if ((this.FF_ManPower_Select_By_FF_IDOperationCompleted == null)) {
                this.FF_ManPower_Select_By_FF_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_By_FF_IDOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_By_FF_ID", new object[] {
                        username,
                        password,
                        FF_ID}, this.FF_ManPower_Select_By_FF_IDOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_By_FF_IDOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_By_FF_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_By_FF_IDCompleted(this, new FF_ManPower_Select_By_FF_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExitPathways_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExitPathways ExitPathways_Insert(string username, string password, ExitPathways ExitPathway) {
            object[] results = this.Invoke("ExitPathways_Insert", new object[] {
                        username,
                        password,
                        ExitPathway});
            return ((ExitPathways)(results[0]));
        }
        
        /// <remarks/>
        public void ExitPathways_InsertAsync(string username, string password, ExitPathways ExitPathway) {
            this.ExitPathways_InsertAsync(username, password, ExitPathway, null);
        }
        
        /// <remarks/>
        public void ExitPathways_InsertAsync(string username, string password, ExitPathways ExitPathway, object userState) {
            if ((this.ExitPathways_InsertOperationCompleted == null)) {
                this.ExitPathways_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExitPathways_InsertOperationCompleted);
            }
            this.InvokeAsync("ExitPathways_Insert", new object[] {
                        username,
                        password,
                        ExitPathway}, this.ExitPathways_InsertOperationCompleted, userState);
        }
        
        private void OnExitPathways_InsertOperationCompleted(object arg) {
            if ((this.ExitPathways_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExitPathways_InsertCompleted(this, new ExitPathways_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExitPathways_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExitPathways[] ExitPathways_Select_All(string username, string password) {
            object[] results = this.Invoke("ExitPathways_Select_All", new object[] {
                        username,
                        password});
            return ((ExitPathways[])(results[0]));
        }
        
        /// <remarks/>
        public void ExitPathways_Select_AllAsync(string username, string password) {
            this.ExitPathways_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ExitPathways_Select_AllAsync(string username, string password, object userState) {
            if ((this.ExitPathways_Select_AllOperationCompleted == null)) {
                this.ExitPathways_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExitPathways_Select_AllOperationCompleted);
            }
            this.InvokeAsync("ExitPathways_Select_All", new object[] {
                        username,
                        password}, this.ExitPathways_Select_AllOperationCompleted, userState);
        }
        
        private void OnExitPathways_Select_AllOperationCompleted(object arg) {
            if ((this.ExitPathways_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExitPathways_Select_AllCompleted(this, new ExitPathways_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExitPathways_Select_By_BuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExitPathways[] ExitPathways_Select_By_BuildingID(string username, string password, int BuildingID) {
            object[] results = this.Invoke("ExitPathways_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID});
            return ((ExitPathways[])(results[0]));
        }
        
        /// <remarks/>
        public void ExitPathways_Select_By_BuildingIDAsync(string username, string password, int BuildingID) {
            this.ExitPathways_Select_By_BuildingIDAsync(username, password, BuildingID, null);
        }
        
        /// <remarks/>
        public void ExitPathways_Select_By_BuildingIDAsync(string username, string password, int BuildingID, object userState) {
            if ((this.ExitPathways_Select_By_BuildingIDOperationCompleted == null)) {
                this.ExitPathways_Select_By_BuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExitPathways_Select_By_BuildingIDOperationCompleted);
            }
            this.InvokeAsync("ExitPathways_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID}, this.ExitPathways_Select_By_BuildingIDOperationCompleted, userState);
        }
        
        private void OnExitPathways_Select_By_BuildingIDOperationCompleted(object arg) {
            if ((this.ExitPathways_Select_By_BuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExitPathways_Select_By_BuildingIDCompleted(this, new ExitPathways_Select_By_BuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Death_Delete(string username, string password, int DeathID) {
            object[] results = this.Invoke("Death_Delete", new object[] {
                        username,
                        password,
                        DeathID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Death_DeleteAsync(string username, string password, int DeathID) {
            this.Death_DeleteAsync(username, password, DeathID, null);
        }
        
        /// <remarks/>
        public void Death_DeleteAsync(string username, string password, int DeathID, object userState) {
            if ((this.Death_DeleteOperationCompleted == null)) {
                this.Death_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_DeleteOperationCompleted);
            }
            this.InvokeAsync("Death_Delete", new object[] {
                        username,
                        password,
                        DeathID}, this.Death_DeleteOperationCompleted, userState);
        }
        
        private void OnDeath_DeleteOperationCompleted(object arg) {
            if ((this.Death_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_DeleteCompleted(this, new Death_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death Death_Insert(string username, string password, Death death) {
            object[] results = this.Invoke("Death_Insert", new object[] {
                        username,
                        password,
                        death});
            return ((Death)(results[0]));
        }
        
        /// <remarks/>
        public void Death_InsertAsync(string username, string password, Death death) {
            this.Death_InsertAsync(username, password, death, null);
        }
        
        /// <remarks/>
        public void Death_InsertAsync(string username, string password, Death death, object userState) {
            if ((this.Death_InsertOperationCompleted == null)) {
                this.Death_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_InsertOperationCompleted);
            }
            this.InvokeAsync("Death_Insert", new object[] {
                        username,
                        password,
                        death}, this.Death_InsertOperationCompleted, userState);
        }
        
        private void OnDeath_InsertOperationCompleted(object arg) {
            if ((this.Death_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_InsertCompleted(this, new Death_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_All(string username, string password) {
            object[] results = this.Invoke("Death_Select_All", new object[] {
                        username,
                        password});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_AllAsync(string username, string password) {
            this.Death_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Death_Select_AllAsync(string username, string password, object userState) {
            if ((this.Death_Select_AllOperationCompleted == null)) {
                this.Death_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Death_Select_All", new object[] {
                        username,
                        password}, this.Death_Select_AllOperationCompleted, userState);
        }
        
        private void OnDeath_Select_AllOperationCompleted(object arg) {
            if ((this.Death_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_AllCompleted(this, new Death_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_AccidentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_AccidentID(string username, string password, int AccidentID) {
            object[] results = this.Invoke("Death_Select_By_AccidentID", new object[] {
                        username,
                        password,
                        AccidentID});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_AccidentIDAsync(string username, string password, int AccidentID) {
            this.Death_Select_By_AccidentIDAsync(username, password, AccidentID, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_AccidentIDAsync(string username, string password, int AccidentID, object userState) {
            if ((this.Death_Select_By_AccidentIDOperationCompleted == null)) {
                this.Death_Select_By_AccidentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_AccidentIDOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_AccidentID", new object[] {
                        username,
                        password,
                        AccidentID}, this.Death_Select_By_AccidentIDOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_AccidentIDOperationCompleted(object arg) {
            if ((this.Death_Select_By_AccidentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_AccidentIDCompleted(this, new Death_Select_By_AccidentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_Age", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_Age(string username, string password, int Age) {
            object[] results = this.Invoke("Death_Select_By_Age", new object[] {
                        username,
                        password,
                        Age});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_AgeAsync(string username, string password, int Age) {
            this.Death_Select_By_AgeAsync(username, password, Age, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_AgeAsync(string username, string password, int Age, object userState) {
            if ((this.Death_Select_By_AgeOperationCompleted == null)) {
                this.Death_Select_By_AgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_AgeOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_Age", new object[] {
                        username,
                        password,
                        Age}, this.Death_Select_By_AgeOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_AgeOperationCompleted(object arg) {
            if ((this.Death_Select_By_AgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_AgeCompleted(this, new Death_Select_By_AgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_Civil_Military", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_Civil_Military(string username, string password, string Civil_Military) {
            object[] results = this.Invoke("Death_Select_By_Civil_Military", new object[] {
                        username,
                        password,
                        Civil_Military});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_Civil_MilitaryAsync(string username, string password, string Civil_Military) {
            this.Death_Select_By_Civil_MilitaryAsync(username, password, Civil_Military, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_Civil_MilitaryAsync(string username, string password, string Civil_Military, object userState) {
            if ((this.Death_Select_By_Civil_MilitaryOperationCompleted == null)) {
                this.Death_Select_By_Civil_MilitaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_Civil_MilitaryOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_Civil_Military", new object[] {
                        username,
                        password,
                        Civil_Military}, this.Death_Select_By_Civil_MilitaryOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_Civil_MilitaryOperationCompleted(object arg) {
            if ((this.Death_Select_By_Civil_MilitaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_Civil_MilitaryCompleted(this, new Death_Select_By_Civil_MilitaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_Date", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_Date(string username, string password, System.DateTime Date) {
            object[] results = this.Invoke("Death_Select_By_Date", new object[] {
                        username,
                        password,
                        Date});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_DateAsync(string username, string password, System.DateTime Date) {
            this.Death_Select_By_DateAsync(username, password, Date, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_DateAsync(string username, string password, System.DateTime Date, object userState) {
            if ((this.Death_Select_By_DateOperationCompleted == null)) {
                this.Death_Select_By_DateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_DateOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_Date", new object[] {
                        username,
                        password,
                        Date}, this.Death_Select_By_DateOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_DateOperationCompleted(object arg) {
            if ((this.Death_Select_By_DateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_DateCompleted(this, new Death_Select_By_DateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_DeathID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_DeathID(string username, string password, int DeathID) {
            object[] results = this.Invoke("Death_Select_By_DeathID", new object[] {
                        username,
                        password,
                        DeathID});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_DeathIDAsync(string username, string password, int DeathID) {
            this.Death_Select_By_DeathIDAsync(username, password, DeathID, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_DeathIDAsync(string username, string password, int DeathID, object userState) {
            if ((this.Death_Select_By_DeathIDOperationCompleted == null)) {
                this.Death_Select_By_DeathIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_DeathIDOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_DeathID", new object[] {
                        username,
                        password,
                        DeathID}, this.Death_Select_By_DeathIDOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_DeathIDOperationCompleted(object arg) {
            if ((this.Death_Select_By_DeathIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_DeathIDCompleted(this, new Death_Select_By_DeathIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_Name", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_Name(string username, string password, string Name) {
            object[] results = this.Invoke("Death_Select_By_Name", new object[] {
                        username,
                        password,
                        Name});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_NameAsync(string username, string password, string Name) {
            this.Death_Select_By_NameAsync(username, password, Name, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_NameAsync(string username, string password, string Name, object userState) {
            if ((this.Death_Select_By_NameOperationCompleted == null)) {
                this.Death_Select_By_NameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_NameOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_Name", new object[] {
                        username,
                        password,
                        Name}, this.Death_Select_By_NameOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_NameOperationCompleted(object arg) {
            if ((this.Death_Select_By_NameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_NameCompleted(this, new Death_Select_By_NameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Death_Select_By_Rank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Death[] Death_Select_By_Rank(string username, string password, string Rank) {
            object[] results = this.Invoke("Death_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank});
            return ((Death[])(results[0]));
        }
        
        /// <remarks/>
        public void Death_Select_By_RankAsync(string username, string password, string Rank) {
            this.Death_Select_By_RankAsync(username, password, Rank, null);
        }
        
        /// <remarks/>
        public void Death_Select_By_RankAsync(string username, string password, string Rank, object userState) {
            if ((this.Death_Select_By_RankOperationCompleted == null)) {
                this.Death_Select_By_RankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeath_Select_By_RankOperationCompleted);
            }
            this.InvokeAsync("Death_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank}, this.Death_Select_By_RankOperationCompleted, userState);
        }
        
        private void OnDeath_Select_By_RankOperationCompleted(object arg) {
            if ((this.Death_Select_By_RankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Death_Select_By_RankCompleted(this, new Death_Select_By_RankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces DangerousPlaces_Insert(string username, string password, DangerousPlaces dangerousPlaces) {
            object[] results = this.Invoke("DangerousPlaces_Insert", new object[] {
                        username,
                        password,
                        dangerousPlaces});
            return ((DangerousPlaces)(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_InsertAsync(string username, string password, DangerousPlaces dangerousPlaces) {
            this.DangerousPlaces_InsertAsync(username, password, dangerousPlaces, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_InsertAsync(string username, string password, DangerousPlaces dangerousPlaces, object userState) {
            if ((this.DangerousPlaces_InsertOperationCompleted == null)) {
                this.DangerousPlaces_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_InsertOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Insert", new object[] {
                        username,
                        password,
                        dangerousPlaces}, this.DangerousPlaces_InsertOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_InsertOperationCompleted(object arg) {
            if ((this.DangerousPlaces_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_InsertCompleted(this, new DangerousPlaces_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces DangerousPlaces_Update(string username, string password, DangerousPlaces dangerousPlaces) {
            object[] results = this.Invoke("DangerousPlaces_Update", new object[] {
                        username,
                        password,
                        dangerousPlaces});
            return ((DangerousPlaces)(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_UpdateAsync(string username, string password, DangerousPlaces dangerousPlaces) {
            this.DangerousPlaces_UpdateAsync(username, password, dangerousPlaces, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_UpdateAsync(string username, string password, DangerousPlaces dangerousPlaces, object userState) {
            if ((this.DangerousPlaces_UpdateOperationCompleted == null)) {
                this.DangerousPlaces_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_UpdateOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Update", new object[] {
                        username,
                        password,
                        dangerousPlaces}, this.DangerousPlaces_UpdateOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_UpdateOperationCompleted(object arg) {
            if ((this.DangerousPlaces_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_UpdateCompleted(this, new DangerousPlaces_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces[] DangerousPlaces_Select_All(string username, string password) {
            object[] results = this.Invoke("DangerousPlaces_Select_All", new object[] {
                        username,
                        password});
            return ((DangerousPlaces[])(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_AllAsync(string username, string password) {
            this.DangerousPlaces_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_AllAsync(string username, string password, object userState) {
            if ((this.DangerousPlaces_Select_AllOperationCompleted == null)) {
                this.DangerousPlaces_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_AllOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_All", new object[] {
                        username,
                        password}, this.DangerousPlaces_Select_AllOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_AllOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_AllCompleted(this, new DangerousPlaces_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_By_CompanyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces[] DangerousPlaces_Select_By_CompanyID(string username, string password, int CompanyID) {
            object[] results = this.Invoke("DangerousPlaces_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((DangerousPlaces[])(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_CompanyIDAsync(string username, string password, int CompanyID) {
            this.DangerousPlaces_Select_By_CompanyIDAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_CompanyIDAsync(string username, string password, int CompanyID, object userState) {
            if ((this.DangerousPlaces_Select_By_CompanyIDOperationCompleted == null)) {
                this.DangerousPlaces_Select_By_CompanyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_By_CompanyIDOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID}, this.DangerousPlaces_Select_By_CompanyIDOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_By_CompanyIDOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_By_CompanyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_By_CompanyIDCompleted(this, new DangerousPlaces_Select_By_CompanyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_By_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces DangerousPlaces_Select_By_ID(string username, string password, int DangerousPlaceID) {
            object[] results = this.Invoke("DangerousPlaces_Select_By_ID", new object[] {
                        username,
                        password,
                        DangerousPlaceID});
            return ((DangerousPlaces)(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_IDAsync(string username, string password, int DangerousPlaceID) {
            this.DangerousPlaces_Select_By_IDAsync(username, password, DangerousPlaceID, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_IDAsync(string username, string password, int DangerousPlaceID, object userState) {
            if ((this.DangerousPlaces_Select_By_IDOperationCompleted == null)) {
                this.DangerousPlaces_Select_By_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_By_IDOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_By_ID", new object[] {
                        username,
                        password,
                        DangerousPlaceID}, this.DangerousPlaces_Select_By_IDOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_By_IDOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_By_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_By_IDCompleted(this, new DangerousPlaces_Select_By_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_By_FireMediator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces[] DangerousPlaces_Select_By_FireMediator(string username, string password, string FireMediator) {
            object[] results = this.Invoke("DangerousPlaces_Select_By_FireMediator", new object[] {
                        username,
                        password,
                        FireMediator});
            return ((DangerousPlaces[])(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_FireMediatorAsync(string username, string password, string FireMediator) {
            this.DangerousPlaces_Select_By_FireMediatorAsync(username, password, FireMediator, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_FireMediatorAsync(string username, string password, string FireMediator, object userState) {
            if ((this.DangerousPlaces_Select_By_FireMediatorOperationCompleted == null)) {
                this.DangerousPlaces_Select_By_FireMediatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_By_FireMediatorOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_By_FireMediator", new object[] {
                        username,
                        password,
                        FireMediator}, this.DangerousPlaces_Select_By_FireMediatorOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_By_FireMediatorOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_By_FireMediatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_By_FireMediatorCompleted(this, new DangerousPlaces_Select_By_FireMediatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_By_HazardousSubstance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces[] DangerousPlaces_Select_By_HazardousSubstance(string username, string password, string HazardousSubstance) {
            object[] results = this.Invoke("DangerousPlaces_Select_By_HazardousSubstance", new object[] {
                        username,
                        password,
                        HazardousSubstance});
            return ((DangerousPlaces[])(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_HazardousSubstanceAsync(string username, string password, string HazardousSubstance) {
            this.DangerousPlaces_Select_By_HazardousSubstanceAsync(username, password, HazardousSubstance, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_HazardousSubstanceAsync(string username, string password, string HazardousSubstance, object userState) {
            if ((this.DangerousPlaces_Select_By_HazardousSubstanceOperationCompleted == null)) {
                this.DangerousPlaces_Select_By_HazardousSubstanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_By_HazardousSubstanceOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_By_HazardousSubstance", new object[] {
                        username,
                        password,
                        HazardousSubstance}, this.DangerousPlaces_Select_By_HazardousSubstanceOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_By_HazardousSubstanceOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_By_HazardousSubstanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_By_HazardousSubstanceCompleted(this, new DangerousPlaces_Select_By_HazardousSubstanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DangerousPlaces_Select_By_Location", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DangerousPlaces[] DangerousPlaces_Select_By_Location(string username, string password, string Location) {
            object[] results = this.Invoke("DangerousPlaces_Select_By_Location", new object[] {
                        username,
                        password,
                        Location});
            return ((DangerousPlaces[])(results[0]));
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_LocationAsync(string username, string password, string Location) {
            this.DangerousPlaces_Select_By_LocationAsync(username, password, Location, null);
        }
        
        /// <remarks/>
        public void DangerousPlaces_Select_By_LocationAsync(string username, string password, string Location, object userState) {
            if ((this.DangerousPlaces_Select_By_LocationOperationCompleted == null)) {
                this.DangerousPlaces_Select_By_LocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDangerousPlaces_Select_By_LocationOperationCompleted);
            }
            this.InvokeAsync("DangerousPlaces_Select_By_Location", new object[] {
                        username,
                        password,
                        Location}, this.DangerousPlaces_Select_By_LocationOperationCompleted, userState);
        }
        
        private void OnDangerousPlaces_Select_By_LocationOperationCompleted(object arg) {
            if ((this.DangerousPlaces_Select_By_LocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DangerousPlaces_Select_By_LocationCompleted(this, new DangerousPlaces_Select_By_LocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Company_Delete(string username, string password, int CompanyID) {
            object[] results = this.Invoke("Company_Delete", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Company_DeleteAsync(string username, string password, int CompanyID) {
            this.Company_DeleteAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void Company_DeleteAsync(string username, string password, int CompanyID, object userState) {
            if ((this.Company_DeleteOperationCompleted == null)) {
                this.Company_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_DeleteOperationCompleted);
            }
            this.InvokeAsync("Company_Delete", new object[] {
                        username,
                        password,
                        CompanyID}, this.Company_DeleteOperationCompleted, userState);
        }
        
        private void OnCompany_DeleteOperationCompleted(object arg) {
            if ((this.Company_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_DeleteCompleted(this, new Company_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company Company_Insert(string username, string password, Company company) {
            object[] results = this.Invoke("Company_Insert", new object[] {
                        username,
                        password,
                        company});
            return ((Company)(results[0]));
        }
        
        /// <remarks/>
        public void Company_InsertAsync(string username, string password, Company company) {
            this.Company_InsertAsync(username, password, company, null);
        }
        
        /// <remarks/>
        public void Company_InsertAsync(string username, string password, Company company, object userState) {
            if ((this.Company_InsertOperationCompleted == null)) {
                this.Company_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_InsertOperationCompleted);
            }
            this.InvokeAsync("Company_Insert", new object[] {
                        username,
                        password,
                        company}, this.Company_InsertOperationCompleted, userState);
        }
        
        private void OnCompany_InsertOperationCompleted(object arg) {
            if ((this.Company_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_InsertCompleted(this, new Company_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company Company_Update(string username, string password, Company company) {
            object[] results = this.Invoke("Company_Update", new object[] {
                        username,
                        password,
                        company});
            return ((Company)(results[0]));
        }
        
        /// <remarks/>
        public void Company_UpdateAsync(string username, string password, Company company) {
            this.Company_UpdateAsync(username, password, company, null);
        }
        
        /// <remarks/>
        public void Company_UpdateAsync(string username, string password, Company company, object userState) {
            if ((this.Company_UpdateOperationCompleted == null)) {
                this.Company_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_UpdateOperationCompleted);
            }
            this.InvokeAsync("Company_Update", new object[] {
                        username,
                        password,
                        company}, this.Company_UpdateOperationCompleted, userState);
        }
        
        private void OnCompany_UpdateOperationCompleted(object arg) {
            if ((this.Company_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_UpdateCompleted(this, new Company_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_All(string username, string password) {
            object[] results = this.Invoke("Company_Select_All", new object[] {
                        username,
                        password});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_AllAsync(string username, string password) {
            this.Company_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Company_Select_AllAsync(string username, string password, object userState) {
            if ((this.Company_Select_AllOperationCompleted == null)) {
                this.Company_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Company_Select_All", new object[] {
                        username,
                        password}, this.Company_Select_AllOperationCompleted, userState);
        }
        
        private void OnCompany_Select_AllOperationCompleted(object arg) {
            if ((this.Company_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_AllCompleted(this, new Company_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_Address", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_Address(string username, string password, string address) {
            object[] results = this.Invoke("Company_Select_By_Address", new object[] {
                        username,
                        password,
                        address});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_AddressAsync(string username, string password, string address) {
            this.Company_Select_By_AddressAsync(username, password, address, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_AddressAsync(string username, string password, string address, object userState) {
            if ((this.Company_Select_By_AddressOperationCompleted == null)) {
                this.Company_Select_By_AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_AddressOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_Address", new object[] {
                        username,
                        password,
                        address}, this.Company_Select_By_AddressOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_AddressOperationCompleted(object arg) {
            if ((this.Company_Select_By_AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_AddressCompleted(this, new Company_Select_By_AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_BackCompanyBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_BackCompanyBusiness(string username, string password, string BackCompanyBusiness) {
            object[] results = this.Invoke("Company_Select_By_BackCompanyBusiness", new object[] {
                        username,
                        password,
                        BackCompanyBusiness});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_BackCompanyBusinessAsync(string username, string password, string BackCompanyBusiness) {
            this.Company_Select_By_BackCompanyBusinessAsync(username, password, BackCompanyBusiness, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_BackCompanyBusinessAsync(string username, string password, string BackCompanyBusiness, object userState) {
            if ((this.Company_Select_By_BackCompanyBusinessOperationCompleted == null)) {
                this.Company_Select_By_BackCompanyBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_BackCompanyBusinessOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_BackCompanyBusiness", new object[] {
                        username,
                        password,
                        BackCompanyBusiness}, this.Company_Select_By_BackCompanyBusinessOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_BackCompanyBusinessOperationCompleted(object arg) {
            if ((this.Company_Select_By_BackCompanyBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_BackCompanyBusinessCompleted(this, new Company_Select_By_BackCompanyBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_BackCompanyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_BackCompanyName(string username, string password, string BackCompanyName) {
            object[] results = this.Invoke("Company_Select_By_BackCompanyName", new object[] {
                        username,
                        password,
                        BackCompanyName});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_BackCompanyNameAsync(string username, string password, string BackCompanyName) {
            this.Company_Select_By_BackCompanyNameAsync(username, password, BackCompanyName, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_BackCompanyNameAsync(string username, string password, string BackCompanyName, object userState) {
            if ((this.Company_Select_By_BackCompanyNameOperationCompleted == null)) {
                this.Company_Select_By_BackCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_BackCompanyNameOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_BackCompanyName", new object[] {
                        username,
                        password,
                        BackCompanyName}, this.Company_Select_By_BackCompanyNameOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_BackCompanyNameOperationCompleted(object arg) {
            if ((this.Company_Select_By_BackCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_BackCompanyNameCompleted(this, new Company_Select_By_BackCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_BackFireMediator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_BackFireMediator(string username, string password, string BackFireMediator) {
            object[] results = this.Invoke("Company_Select_By_BackFireMediator", new object[] {
                        username,
                        password,
                        BackFireMediator});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_BackFireMediatorAsync(string username, string password, string BackFireMediator) {
            this.Company_Select_By_BackFireMediatorAsync(username, password, BackFireMediator, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_BackFireMediatorAsync(string username, string password, string BackFireMediator, object userState) {
            if ((this.Company_Select_By_BackFireMediatorOperationCompleted == null)) {
                this.Company_Select_By_BackFireMediatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_BackFireMediatorOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_BackFireMediator", new object[] {
                        username,
                        password,
                        BackFireMediator}, this.Company_Select_By_BackFireMediatorOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_BackFireMediatorOperationCompleted(object arg) {
            if ((this.Company_Select_By_BackFireMediatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_BackFireMediatorCompleted(this, new Company_Select_By_BackFireMediatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_BuildingsNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_BuildingsNumber(string username, string password, int BuildingsNumber) {
            object[] results = this.Invoke("Company_Select_By_BuildingsNumber", new object[] {
                        username,
                        password,
                        BuildingsNumber});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_BuildingsNumberAsync(string username, string password, int BuildingsNumber) {
            this.Company_Select_By_BuildingsNumberAsync(username, password, BuildingsNumber, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_BuildingsNumberAsync(string username, string password, int BuildingsNumber, object userState) {
            if ((this.Company_Select_By_BuildingsNumberOperationCompleted == null)) {
                this.Company_Select_By_BuildingsNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_BuildingsNumberOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_BuildingsNumber", new object[] {
                        username,
                        password,
                        BuildingsNumber}, this.Company_Select_By_BuildingsNumberOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_BuildingsNumberOperationCompleted(object arg) {
            if ((this.Company_Select_By_BuildingsNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_BuildingsNumberCompleted(this, new Company_Select_By_BuildingsNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_CompanyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company Company_Select_By_CompanyID(string username, string password, int CompanyID) {
            object[] results = this.Invoke("Company_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((Company)(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_CompanyIDAsync(string username, string password, int CompanyID) {
            this.Company_Select_By_CompanyIDAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_CompanyIDAsync(string username, string password, int CompanyID, object userState) {
            if ((this.Company_Select_By_CompanyIDOperationCompleted == null)) {
                this.Company_Select_By_CompanyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_CompanyIDOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID}, this.Company_Select_By_CompanyIDOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_CompanyIDOperationCompleted(object arg) {
            if ((this.Company_Select_By_CompanyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_CompanyIDCompleted(this, new Company_Select_By_CompanyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_ElectricalPanelLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_ElectricalPanelLocation(string username, string password, string ElectricalPanelLocation) {
            object[] results = this.Invoke("Company_Select_By_ElectricalPanelLocation", new object[] {
                        username,
                        password,
                        ElectricalPanelLocation});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_ElectricalPanelLocationAsync(string username, string password, string ElectricalPanelLocation) {
            this.Company_Select_By_ElectricalPanelLocationAsync(username, password, ElectricalPanelLocation, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_ElectricalPanelLocationAsync(string username, string password, string ElectricalPanelLocation, object userState) {
            if ((this.Company_Select_By_ElectricalPanelLocationOperationCompleted == null)) {
                this.Company_Select_By_ElectricalPanelLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_ElectricalPanelLocationOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_ElectricalPanelLocation", new object[] {
                        username,
                        password,
                        ElectricalPanelLocation}, this.Company_Select_By_ElectricalPanelLocationOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_ElectricalPanelLocationOperationCompleted(object arg) {
            if ((this.Company_Select_By_ElectricalPanelLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_ElectricalPanelLocationCompleted(this, new Company_Select_By_ElectricalPanelLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_FrontCompanyBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_FrontCompanyBusiness(string username, string password, string FrontCompanyBusiness) {
            object[] results = this.Invoke("Company_Select_By_FrontCompanyBusiness", new object[] {
                        username,
                        password,
                        FrontCompanyBusiness});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontCompanyBusinessAsync(string username, string password, string FrontCompanyBusiness) {
            this.Company_Select_By_FrontCompanyBusinessAsync(username, password, FrontCompanyBusiness, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontCompanyBusinessAsync(string username, string password, string FrontCompanyBusiness, object userState) {
            if ((this.Company_Select_By_FrontCompanyBusinessOperationCompleted == null)) {
                this.Company_Select_By_FrontCompanyBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_FrontCompanyBusinessOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_FrontCompanyBusiness", new object[] {
                        username,
                        password,
                        FrontCompanyBusiness}, this.Company_Select_By_FrontCompanyBusinessOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_FrontCompanyBusinessOperationCompleted(object arg) {
            if ((this.Company_Select_By_FrontCompanyBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_FrontCompanyBusinessCompleted(this, new Company_Select_By_FrontCompanyBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_FrontCompanyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_FrontCompanyName(string username, string password, string FrontCompanyName) {
            object[] results = this.Invoke("Company_Select_By_FrontCompanyName", new object[] {
                        username,
                        password,
                        FrontCompanyName});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontCompanyNameAsync(string username, string password, string FrontCompanyName) {
            this.Company_Select_By_FrontCompanyNameAsync(username, password, FrontCompanyName, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontCompanyNameAsync(string username, string password, string FrontCompanyName, object userState) {
            if ((this.Company_Select_By_FrontCompanyNameOperationCompleted == null)) {
                this.Company_Select_By_FrontCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_FrontCompanyNameOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_FrontCompanyName", new object[] {
                        username,
                        password,
                        FrontCompanyName}, this.Company_Select_By_FrontCompanyNameOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_FrontCompanyNameOperationCompleted(object arg) {
            if ((this.Company_Select_By_FrontCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_FrontCompanyNameCompleted(this, new Company_Select_By_FrontCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_FrontFireMediator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_FrontFireMediator(string username, string password, string FrontFireMediator) {
            object[] results = this.Invoke("Company_Select_By_FrontFireMediator", new object[] {
                        username,
                        password,
                        FrontFireMediator});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontFireMediatorAsync(string username, string password, string FrontFireMediator) {
            this.Company_Select_By_FrontFireMediatorAsync(username, password, FrontFireMediator, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_FrontFireMediatorAsync(string username, string password, string FrontFireMediator, object userState) {
            if ((this.Company_Select_By_FrontFireMediatorOperationCompleted == null)) {
                this.Company_Select_By_FrontFireMediatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_FrontFireMediatorOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_FrontFireMediator", new object[] {
                        username,
                        password,
                        FrontFireMediator}, this.Company_Select_By_FrontFireMediatorOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_FrontFireMediatorOperationCompleted(object arg) {
            if ((this.Company_Select_By_FrontFireMediatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_FrontFireMediatorCompleted(this, new Company_Select_By_FrontFireMediatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_GasTrapLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_GasTrapLocation(string username, string password, string GasTrapLocation) {
            object[] results = this.Invoke("Company_Select_By_GasTrapLocation", new object[] {
                        username,
                        password,
                        GasTrapLocation});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_GasTrapLocationAsync(string username, string password, string GasTrapLocation) {
            this.Company_Select_By_GasTrapLocationAsync(username, password, GasTrapLocation, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_GasTrapLocationAsync(string username, string password, string GasTrapLocation, object userState) {
            if ((this.Company_Select_By_GasTrapLocationOperationCompleted == null)) {
                this.Company_Select_By_GasTrapLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_GasTrapLocationOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_GasTrapLocation", new object[] {
                        username,
                        password,
                        GasTrapLocation}, this.Company_Select_By_GasTrapLocationOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_GasTrapLocationOperationCompleted(object arg) {
            if ((this.Company_Select_By_GasTrapLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_GasTrapLocationCompleted(this, new Company_Select_By_GasTrapLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_LandlinePhoneNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_LandlinePhoneNumber(string username, string password, string LandlinePhoneNumber) {
            object[] results = this.Invoke("Company_Select_By_LandlinePhoneNumber", new object[] {
                        username,
                        password,
                        LandlinePhoneNumber});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_LandlinePhoneNumberAsync(string username, string password, string LandlinePhoneNumber) {
            this.Company_Select_By_LandlinePhoneNumberAsync(username, password, LandlinePhoneNumber, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_LandlinePhoneNumberAsync(string username, string password, string LandlinePhoneNumber, object userState) {
            if ((this.Company_Select_By_LandlinePhoneNumberOperationCompleted == null)) {
                this.Company_Select_By_LandlinePhoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_LandlinePhoneNumberOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_LandlinePhoneNumber", new object[] {
                        username,
                        password,
                        LandlinePhoneNumber}, this.Company_Select_By_LandlinePhoneNumberOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_LandlinePhoneNumberOperationCompleted(object arg) {
            if ((this.Company_Select_By_LandlinePhoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_LandlinePhoneNumberCompleted(this, new Company_Select_By_LandlinePhoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_LeftCompanyBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_LeftCompanyBusiness(string username, string password, string LeftCompanyBusiness) {
            object[] results = this.Invoke("Company_Select_By_LeftCompanyBusiness", new object[] {
                        username,
                        password,
                        LeftCompanyBusiness});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftCompanyBusinessAsync(string username, string password, string LeftCompanyBusiness) {
            this.Company_Select_By_LeftCompanyBusinessAsync(username, password, LeftCompanyBusiness, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftCompanyBusinessAsync(string username, string password, string LeftCompanyBusiness, object userState) {
            if ((this.Company_Select_By_LeftCompanyBusinessOperationCompleted == null)) {
                this.Company_Select_By_LeftCompanyBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_LeftCompanyBusinessOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_LeftCompanyBusiness", new object[] {
                        username,
                        password,
                        LeftCompanyBusiness}, this.Company_Select_By_LeftCompanyBusinessOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_LeftCompanyBusinessOperationCompleted(object arg) {
            if ((this.Company_Select_By_LeftCompanyBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_LeftCompanyBusinessCompleted(this, new Company_Select_By_LeftCompanyBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_LeftCompanyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_LeftCompanyName(string username, string password, string LeftCompanyName) {
            object[] results = this.Invoke("Company_Select_By_LeftCompanyName", new object[] {
                        username,
                        password,
                        LeftCompanyName});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftCompanyNameAsync(string username, string password, string LeftCompanyName) {
            this.Company_Select_By_LeftCompanyNameAsync(username, password, LeftCompanyName, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftCompanyNameAsync(string username, string password, string LeftCompanyName, object userState) {
            if ((this.Company_Select_By_LeftCompanyNameOperationCompleted == null)) {
                this.Company_Select_By_LeftCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_LeftCompanyNameOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_LeftCompanyName", new object[] {
                        username,
                        password,
                        LeftCompanyName}, this.Company_Select_By_LeftCompanyNameOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_LeftCompanyNameOperationCompleted(object arg) {
            if ((this.Company_Select_By_LeftCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_LeftCompanyNameCompleted(this, new Company_Select_By_LeftCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_LeftFireMediator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_LeftFireMediator(string username, string password, string LeftFireMediator) {
            object[] results = this.Invoke("Company_Select_By_LeftFireMediator", new object[] {
                        username,
                        password,
                        LeftFireMediator});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftFireMediatorAsync(string username, string password, string LeftFireMediator) {
            this.Company_Select_By_LeftFireMediatorAsync(username, password, LeftFireMediator, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_LeftFireMediatorAsync(string username, string password, string LeftFireMediator, object userState) {
            if ((this.Company_Select_By_LeftFireMediatorOperationCompleted == null)) {
                this.Company_Select_By_LeftFireMediatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_LeftFireMediatorOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_LeftFireMediator", new object[] {
                        username,
                        password,
                        LeftFireMediator}, this.Company_Select_By_LeftFireMediatorOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_LeftFireMediatorOperationCompleted(object arg) {
            if ((this.Company_Select_By_LeftFireMediatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_LeftFireMediatorCompleted(this, new Company_Select_By_LeftFireMediatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_Name", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_Name(string username, string password, string Name) {
            object[] results = this.Invoke("Company_Select_By_Name", new object[] {
                        username,
                        password,
                        Name});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_NameAsync(string username, string password, string Name) {
            this.Company_Select_By_NameAsync(username, password, Name, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_NameAsync(string username, string password, string Name, object userState) {
            if ((this.Company_Select_By_NameOperationCompleted == null)) {
                this.Company_Select_By_NameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_NameOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_Name", new object[] {
                        username,
                        password,
                        Name}, this.Company_Select_By_NameOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_NameOperationCompleted(object arg) {
            if ((this.Company_Select_By_NameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_NameCompleted(this, new Company_Select_By_NameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_OxygenTrapLocation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_OxygenTrapLocation(string username, string password, string OxygenTrapLocation) {
            object[] results = this.Invoke("Company_Select_By_OxygenTrapLocation", new object[] {
                        username,
                        password,
                        OxygenTrapLocation});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_OxygenTrapLocationAsync(string username, string password, string OxygenTrapLocation) {
            this.Company_Select_By_OxygenTrapLocationAsync(username, password, OxygenTrapLocation, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_OxygenTrapLocationAsync(string username, string password, string OxygenTrapLocation, object userState) {
            if ((this.Company_Select_By_OxygenTrapLocationOperationCompleted == null)) {
                this.Company_Select_By_OxygenTrapLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_OxygenTrapLocationOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_OxygenTrapLocation", new object[] {
                        username,
                        password,
                        OxygenTrapLocation}, this.Company_Select_By_OxygenTrapLocationOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_OxygenTrapLocationOperationCompleted(object arg) {
            if ((this.Company_Select_By_OxygenTrapLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_OxygenTrapLocationCompleted(this, new Company_Select_By_OxygenTrapLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_RightCompanyBusiness", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_RightCompanyBusiness(string username, string password, string RightCompanyBusiness) {
            object[] results = this.Invoke("Company_Select_By_RightCompanyBusiness", new object[] {
                        username,
                        password,
                        RightCompanyBusiness});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_RightCompanyBusinessAsync(string username, string password, string RightCompanyBusiness) {
            this.Company_Select_By_RightCompanyBusinessAsync(username, password, RightCompanyBusiness, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_RightCompanyBusinessAsync(string username, string password, string RightCompanyBusiness, object userState) {
            if ((this.Company_Select_By_RightCompanyBusinessOperationCompleted == null)) {
                this.Company_Select_By_RightCompanyBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_RightCompanyBusinessOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_RightCompanyBusiness", new object[] {
                        username,
                        password,
                        RightCompanyBusiness}, this.Company_Select_By_RightCompanyBusinessOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_RightCompanyBusinessOperationCompleted(object arg) {
            if ((this.Company_Select_By_RightCompanyBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_RightCompanyBusinessCompleted(this, new Company_Select_By_RightCompanyBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_RightCompanyName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_RightCompanyName(string username, string password, string RightCompanyName) {
            object[] results = this.Invoke("Company_Select_By_RightCompanyName", new object[] {
                        username,
                        password,
                        RightCompanyName});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_RightCompanyNameAsync(string username, string password, string RightCompanyName) {
            this.Company_Select_By_RightCompanyNameAsync(username, password, RightCompanyName, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_RightCompanyNameAsync(string username, string password, string RightCompanyName, object userState) {
            if ((this.Company_Select_By_RightCompanyNameOperationCompleted == null)) {
                this.Company_Select_By_RightCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_RightCompanyNameOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_RightCompanyName", new object[] {
                        username,
                        password,
                        RightCompanyName}, this.Company_Select_By_RightCompanyNameOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_RightCompanyNameOperationCompleted(object arg) {
            if ((this.Company_Select_By_RightCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_RightCompanyNameCompleted(this, new Company_Select_By_RightCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_RightFireMediator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_RightFireMediator(string username, string password, string RightFireMediator) {
            object[] results = this.Invoke("Company_Select_By_RightFireMediator", new object[] {
                        username,
                        password,
                        RightFireMediator});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_RightFireMediatorAsync(string username, string password, string RightFireMediator) {
            this.Company_Select_By_RightFireMediatorAsync(username, password, RightFireMediator, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_RightFireMediatorAsync(string username, string password, string RightFireMediator, object userState) {
            if ((this.Company_Select_By_RightFireMediatorOperationCompleted == null)) {
                this.Company_Select_By_RightFireMediatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_RightFireMediatorOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_RightFireMediator", new object[] {
                        username,
                        password,
                        RightFireMediator}, this.Company_Select_By_RightFireMediatorOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_RightFireMediatorOperationCompleted(object arg) {
            if ((this.Company_Select_By_RightFireMediatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_RightFireMediatorCompleted(this, new Company_Select_By_RightFireMediatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Company_Select_By_UserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Company[] Company_Select_By_UserID(string username, string password, int UserID) {
            object[] results = this.Invoke("Company_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID});
            return ((Company[])(results[0]));
        }
        
        /// <remarks/>
        public void Company_Select_By_UserIDAsync(string username, string password, int UserID) {
            this.Company_Select_By_UserIDAsync(username, password, UserID, null);
        }
        
        /// <remarks/>
        public void Company_Select_By_UserIDAsync(string username, string password, int UserID, object userState) {
            if ((this.Company_Select_By_UserIDOperationCompleted == null)) {
                this.Company_Select_By_UserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompany_Select_By_UserIDOperationCompleted);
            }
            this.InvokeAsync("Company_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID}, this.Company_Select_By_UserIDOperationCompleted, userState);
        }
        
        private void OnCompany_Select_By_UserIDOperationCompleted(object arg) {
            if ((this.Company_Select_By_UserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Company_Select_By_UserIDCompleted(this, new Company_Select_By_UserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Managers_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Managers_Delete(string username, string password, int ManagerID) {
            object[] results = this.Invoke("Managers_Delete", new object[] {
                        username,
                        password,
                        ManagerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Managers_DeleteAsync(string username, string password, int ManagerID) {
            this.Managers_DeleteAsync(username, password, ManagerID, null);
        }
        
        /// <remarks/>
        public void Managers_DeleteAsync(string username, string password, int ManagerID, object userState) {
            if ((this.Managers_DeleteOperationCompleted == null)) {
                this.Managers_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagers_DeleteOperationCompleted);
            }
            this.InvokeAsync("Managers_Delete", new object[] {
                        username,
                        password,
                        ManagerID}, this.Managers_DeleteOperationCompleted, userState);
        }
        
        private void OnManagers_DeleteOperationCompleted(object arg) {
            if ((this.Managers_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Managers_DeleteCompleted(this, new Managers_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Managers_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Managers Managers_Insert(string username, string password, Managers Manager) {
            object[] results = this.Invoke("Managers_Insert", new object[] {
                        username,
                        password,
                        Manager});
            return ((Managers)(results[0]));
        }
        
        /// <remarks/>
        public void Managers_InsertAsync(string username, string password, Managers Manager) {
            this.Managers_InsertAsync(username, password, Manager, null);
        }
        
        /// <remarks/>
        public void Managers_InsertAsync(string username, string password, Managers Manager, object userState) {
            if ((this.Managers_InsertOperationCompleted == null)) {
                this.Managers_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagers_InsertOperationCompleted);
            }
            this.InvokeAsync("Managers_Insert", new object[] {
                        username,
                        password,
                        Manager}, this.Managers_InsertOperationCompleted, userState);
        }
        
        private void OnManagers_InsertOperationCompleted(object arg) {
            if ((this.Managers_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Managers_InsertCompleted(this, new Managers_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Managers_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Managers[] Managers_Select_All(string username, string password) {
            object[] results = this.Invoke("Managers_Select_All", new object[] {
                        username,
                        password});
            return ((Managers[])(results[0]));
        }
        
        /// <remarks/>
        public void Managers_Select_AllAsync(string username, string password) {
            this.Managers_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Managers_Select_AllAsync(string username, string password, object userState) {
            if ((this.Managers_Select_AllOperationCompleted == null)) {
                this.Managers_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagers_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Managers_Select_All", new object[] {
                        username,
                        password}, this.Managers_Select_AllOperationCompleted, userState);
        }
        
        private void OnManagers_Select_AllOperationCompleted(object arg) {
            if ((this.Managers_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Managers_Select_AllCompleted(this, new Managers_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Managers_Select_By_CompanyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Managers[] Managers_Select_By_CompanyID(string username, string password, int CompanyID) {
            object[] results = this.Invoke("Managers_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID});
            return ((Managers[])(results[0]));
        }
        
        /// <remarks/>
        public void Managers_Select_By_CompanyIDAsync(string username, string password, int CompanyID) {
            this.Managers_Select_By_CompanyIDAsync(username, password, CompanyID, null);
        }
        
        /// <remarks/>
        public void Managers_Select_By_CompanyIDAsync(string username, string password, int CompanyID, object userState) {
            if ((this.Managers_Select_By_CompanyIDOperationCompleted == null)) {
                this.Managers_Select_By_CompanyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagers_Select_By_CompanyIDOperationCompleted);
            }
            this.InvokeAsync("Managers_Select_By_CompanyID", new object[] {
                        username,
                        password,
                        CompanyID}, this.Managers_Select_By_CompanyIDOperationCompleted, userState);
        }
        
        private void OnManagers_Select_By_CompanyIDOperationCompleted(object arg) {
            if ((this.Managers_Select_By_CompanyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Managers_Select_By_CompanyIDCompleted(this, new Managers_Select_By_CompanyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Managers_SelectByManagerID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Managers Managers_SelectByManagerID(string username, string password, int ManagerID) {
            object[] results = this.Invoke("Managers_SelectByManagerID", new object[] {
                        username,
                        password,
                        ManagerID});
            return ((Managers)(results[0]));
        }
        
        /// <remarks/>
        public void Managers_SelectByManagerIDAsync(string username, string password, int ManagerID) {
            this.Managers_SelectByManagerIDAsync(username, password, ManagerID, null);
        }
        
        /// <remarks/>
        public void Managers_SelectByManagerIDAsync(string username, string password, int ManagerID, object userState) {
            if ((this.Managers_SelectByManagerIDOperationCompleted == null)) {
                this.Managers_SelectByManagerIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnManagers_SelectByManagerIDOperationCompleted);
            }
            this.InvokeAsync("Managers_SelectByManagerID", new object[] {
                        username,
                        password,
                        ManagerID}, this.Managers_SelectByManagerIDOperationCompleted, userState);
        }
        
        private void OnManagers_SelectByManagerIDOperationCompleted(object arg) {
            if ((this.Managers_SelectByManagerIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Managers_SelectByManagerIDCompleted(this, new Managers_SelectByManagerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Buildings_Delete(string username, string password, int BuildingID) {
            object[] results = this.Invoke("Buildings_Delete", new object[] {
                        username,
                        password,
                        BuildingID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_DeleteAsync(string username, string password, int BuildingID) {
            this.Buildings_DeleteAsync(username, password, BuildingID, null);
        }
        
        /// <remarks/>
        public void Buildings_DeleteAsync(string username, string password, int BuildingID, object userState) {
            if ((this.Buildings_DeleteOperationCompleted == null)) {
                this.Buildings_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_DeleteOperationCompleted);
            }
            this.InvokeAsync("Buildings_Delete", new object[] {
                        username,
                        password,
                        BuildingID}, this.Buildings_DeleteOperationCompleted, userState);
        }
        
        private void OnBuildings_DeleteOperationCompleted(object arg) {
            if ((this.Buildings_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_DeleteCompleted(this, new Buildings_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Buildings_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Buildings Buildings_Insert(string username, string password, Buildings buildings) {
            object[] results = this.Invoke("Buildings_Insert", new object[] {
                        username,
                        password,
                        buildings});
            return ((Buildings)(results[0]));
        }
        
        /// <remarks/>
        public void Buildings_InsertAsync(string username, string password, Buildings buildings) {
            this.Buildings_InsertAsync(username, password, buildings, null);
        }
        
        /// <remarks/>
        public void Buildings_InsertAsync(string username, string password, Buildings buildings, object userState) {
            if ((this.Buildings_InsertOperationCompleted == null)) {
                this.Buildings_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuildings_InsertOperationCompleted);
            }
            this.InvokeAsync("Buildings_Insert", new object[] {
                        username,
                        password,
                        buildings}, this.Buildings_InsertOperationCompleted, userState);
        }
        
        private void OnBuildings_InsertOperationCompleted(object arg) {
            if ((this.Buildings_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Buildings_InsertCompleted(this, new Buildings_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Users_Delete(string username, string password, int user_id) {
            object[] results = this.Invoke("Users_Delete", new object[] {
                        username,
                        password,
                        user_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Users_DeleteAsync(string username, string password, int user_id) {
            this.Users_DeleteAsync(username, password, user_id, null);
        }
        
        /// <remarks/>
        public void Users_DeleteAsync(string username, string password, int user_id, object userState) {
            if ((this.Users_DeleteOperationCompleted == null)) {
                this.Users_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_DeleteOperationCompleted);
            }
            this.InvokeAsync("Users_Delete", new object[] {
                        username,
                        password,
                        user_id}, this.Users_DeleteOperationCompleted, userState);
        }
        
        private void OnUsers_DeleteOperationCompleted(object arg) {
            if ((this.Users_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_DeleteCompleted(this, new Users_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users Users_Insert(string username, string password, Users Users) {
            object[] results = this.Invoke("Users_Insert", new object[] {
                        username,
                        password,
                        Users});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void Users_InsertAsync(string username, string password, Users Users) {
            this.Users_InsertAsync(username, password, Users, null);
        }
        
        /// <remarks/>
        public void Users_InsertAsync(string username, string password, Users Users, object userState) {
            if ((this.Users_InsertOperationCompleted == null)) {
                this.Users_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_InsertOperationCompleted);
            }
            this.InvokeAsync("Users_Insert", new object[] {
                        username,
                        password,
                        Users}, this.Users_InsertOperationCompleted, userState);
        }
        
        private void OnUsers_InsertOperationCompleted(object arg) {
            if ((this.Users_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_InsertCompleted(this, new Users_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] Users_Select_All(string username, string password) {
            object[] results = this.Invoke("Users_Select_All", new object[] {
                        username,
                        password});
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void Users_Select_AllAsync(string username, string password) {
            this.Users_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Users_Select_AllAsync(string username, string password, object userState) {
            if ((this.Users_Select_AllOperationCompleted == null)) {
                this.Users_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Users_Select_All", new object[] {
                        username,
                        password}, this.Users_Select_AllOperationCompleted, userState);
        }
        
        private void OnUsers_Select_AllOperationCompleted(object arg) {
            if ((this.Users_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Select_AllCompleted(this, new Users_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Select_Users_Of_User", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] Users_Select_Users_Of_User(string username, string password, int UserId) {
            object[] results = this.Invoke("Users_Select_Users_Of_User", new object[] {
                        username,
                        password,
                        UserId});
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void Users_Select_Users_Of_UserAsync(string username, string password, int UserId) {
            this.Users_Select_Users_Of_UserAsync(username, password, UserId, null);
        }
        
        /// <remarks/>
        public void Users_Select_Users_Of_UserAsync(string username, string password, int UserId, object userState) {
            if ((this.Users_Select_Users_Of_UserOperationCompleted == null)) {
                this.Users_Select_Users_Of_UserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Select_Users_Of_UserOperationCompleted);
            }
            this.InvokeAsync("Users_Select_Users_Of_User", new object[] {
                        username,
                        password,
                        UserId}, this.Users_Select_Users_Of_UserOperationCompleted, userState);
        }
        
        private void OnUsers_Select_Users_Of_UserOperationCompleted(object arg) {
            if ((this.Users_Select_Users_Of_UserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Select_Users_Of_UserCompleted(this, new Users_Select_Users_Of_UserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_SelectByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users Users_SelectByUserId(string username, string password, int UserId) {
            object[] results = this.Invoke("Users_SelectByUserId", new object[] {
                        username,
                        password,
                        UserId});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void Users_SelectByUserIdAsync(string username, string password, int UserId) {
            this.Users_SelectByUserIdAsync(username, password, UserId, null);
        }
        
        /// <remarks/>
        public void Users_SelectByUserIdAsync(string username, string password, int UserId, object userState) {
            if ((this.Users_SelectByUserIdOperationCompleted == null)) {
                this.Users_SelectByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_SelectByUserIdOperationCompleted);
            }
            this.InvokeAsync("Users_SelectByUserId", new object[] {
                        username,
                        password,
                        UserId}, this.Users_SelectByUserIdOperationCompleted, userState);
        }
        
        private void OnUsers_SelectByUserIdOperationCompleted(object arg) {
            if ((this.Users_SelectByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_SelectByUserIdCompleted(this, new Users_SelectByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_SelectByNamePass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users Users_SelectByNamePass(string username, string password) {
            object[] results = this.Invoke("Users_SelectByNamePass", new object[] {
                        username,
                        password});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void Users_SelectByNamePassAsync(string username, string password) {
            this.Users_SelectByNamePassAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Users_SelectByNamePassAsync(string username, string password, object userState) {
            if ((this.Users_SelectByNamePassOperationCompleted == null)) {
                this.Users_SelectByNamePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_SelectByNamePassOperationCompleted);
            }
            this.InvokeAsync("Users_SelectByNamePass", new object[] {
                        username,
                        password}, this.Users_SelectByNamePassOperationCompleted, userState);
        }
        
        private void OnUsers_SelectByNamePassOperationCompleted(object arg) {
            if ((this.Users_SelectByNamePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_SelectByNamePassCompleted(this, new Users_SelectByNamePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_SelectByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users Users_SelectByName(string username, string password, string name) {
            object[] results = this.Invoke("Users_SelectByName", new object[] {
                        username,
                        password,
                        name});
            return ((Users)(results[0]));
        }
        
        /// <remarks/>
        public void Users_SelectByNameAsync(string username, string password, string name) {
            this.Users_SelectByNameAsync(username, password, name, null);
        }
        
        /// <remarks/>
        public void Users_SelectByNameAsync(string username, string password, string name, object userState) {
            if ((this.Users_SelectByNameOperationCompleted == null)) {
                this.Users_SelectByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_SelectByNameOperationCompleted);
            }
            this.InvokeAsync("Users_SelectByName", new object[] {
                        username,
                        password,
                        name}, this.Users_SelectByNameOperationCompleted, userState);
        }
        
        private void OnUsers_SelectByNameOperationCompleted(object arg) {
            if ((this.Users_SelectByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_SelectByNameCompleted(this, new Users_SelectByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Select_Super_Admin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users[] Users_Select_Super_Admin(string username, string password) {
            object[] results = this.Invoke("Users_Select_Super_Admin", new object[] {
                        username,
                        password});
            return ((Users[])(results[0]));
        }
        
        /// <remarks/>
        public void Users_Select_Super_AdminAsync(string username, string password) {
            this.Users_Select_Super_AdminAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Users_Select_Super_AdminAsync(string username, string password, object userState) {
            if ((this.Users_Select_Super_AdminOperationCompleted == null)) {
                this.Users_Select_Super_AdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Select_Super_AdminOperationCompleted);
            }
            this.InvokeAsync("Users_Select_Super_Admin", new object[] {
                        username,
                        password}, this.Users_Select_Super_AdminOperationCompleted, userState);
        }
        
        private void OnUsers_Select_Super_AdminOperationCompleted(object arg) {
            if ((this.Users_Select_Super_AdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Select_Super_AdminCompleted(this, new Users_Select_Super_AdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Admin_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Users_Admin_Delete(string username, string password, int user_id, int Admin_id) {
            object[] results = this.Invoke("Users_Admin_Delete", new object[] {
                        username,
                        password,
                        user_id,
                        Admin_id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Users_Admin_DeleteAsync(string username, string password, int user_id, int Admin_id) {
            this.Users_Admin_DeleteAsync(username, password, user_id, Admin_id, null);
        }
        
        /// <remarks/>
        public void Users_Admin_DeleteAsync(string username, string password, int user_id, int Admin_id, object userState) {
            if ((this.Users_Admin_DeleteOperationCompleted == null)) {
                this.Users_Admin_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Admin_DeleteOperationCompleted);
            }
            this.InvokeAsync("Users_Admin_Delete", new object[] {
                        username,
                        password,
                        user_id,
                        Admin_id}, this.Users_Admin_DeleteOperationCompleted, userState);
        }
        
        private void OnUsers_Admin_DeleteOperationCompleted(object arg) {
            if ((this.Users_Admin_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Admin_DeleteCompleted(this, new Users_Admin_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Admin_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users_Admin Users_Admin_Insert(string username, string password, Users_Admin Users_Admin) {
            object[] results = this.Invoke("Users_Admin_Insert", new object[] {
                        username,
                        password,
                        Users_Admin});
            return ((Users_Admin)(results[0]));
        }
        
        /// <remarks/>
        public void Users_Admin_InsertAsync(string username, string password, Users_Admin Users_Admin) {
            this.Users_Admin_InsertAsync(username, password, Users_Admin, null);
        }
        
        /// <remarks/>
        public void Users_Admin_InsertAsync(string username, string password, Users_Admin Users_Admin, object userState) {
            if ((this.Users_Admin_InsertOperationCompleted == null)) {
                this.Users_Admin_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Admin_InsertOperationCompleted);
            }
            this.InvokeAsync("Users_Admin_Insert", new object[] {
                        username,
                        password,
                        Users_Admin}, this.Users_Admin_InsertOperationCompleted, userState);
        }
        
        private void OnUsers_Admin_InsertOperationCompleted(object arg) {
            if ((this.Users_Admin_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Admin_InsertCompleted(this, new Users_Admin_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Admin_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users_Admin[] Users_Admin_Select_All(string username, string password) {
            object[] results = this.Invoke("Users_Admin_Select_All", new object[] {
                        username,
                        password});
            return ((Users_Admin[])(results[0]));
        }
        
        /// <remarks/>
        public void Users_Admin_Select_AllAsync(string username, string password) {
            this.Users_Admin_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Users_Admin_Select_AllAsync(string username, string password, object userState) {
            if ((this.Users_Admin_Select_AllOperationCompleted == null)) {
                this.Users_Admin_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Admin_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Users_Admin_Select_All", new object[] {
                        username,
                        password}, this.Users_Admin_Select_AllOperationCompleted, userState);
        }
        
        private void OnUsers_Admin_Select_AllOperationCompleted(object arg) {
            if ((this.Users_Admin_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Admin_Select_AllCompleted(this, new Users_Admin_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Admin_SelectByAdminId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users_Admin Users_Admin_SelectByAdminId(string username, string password, int Admin_ID) {
            object[] results = this.Invoke("Users_Admin_SelectByAdminId", new object[] {
                        username,
                        password,
                        Admin_ID});
            return ((Users_Admin)(results[0]));
        }
        
        /// <remarks/>
        public void Users_Admin_SelectByAdminIdAsync(string username, string password, int Admin_ID) {
            this.Users_Admin_SelectByAdminIdAsync(username, password, Admin_ID, null);
        }
        
        /// <remarks/>
        public void Users_Admin_SelectByAdminIdAsync(string username, string password, int Admin_ID, object userState) {
            if ((this.Users_Admin_SelectByAdminIdOperationCompleted == null)) {
                this.Users_Admin_SelectByAdminIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Admin_SelectByAdminIdOperationCompleted);
            }
            this.InvokeAsync("Users_Admin_SelectByAdminId", new object[] {
                        username,
                        password,
                        Admin_ID}, this.Users_Admin_SelectByAdminIdOperationCompleted, userState);
        }
        
        private void OnUsers_Admin_SelectByAdminIdOperationCompleted(object arg) {
            if ((this.Users_Admin_SelectByAdminIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Admin_SelectByAdminIdCompleted(this, new Users_Admin_SelectByAdminIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Users_Admin_SelectByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Users_Admin Users_Admin_SelectByUserID(string username, string password, int User_ID) {
            object[] results = this.Invoke("Users_Admin_SelectByUserID", new object[] {
                        username,
                        password,
                        User_ID});
            return ((Users_Admin)(results[0]));
        }
        
        /// <remarks/>
        public void Users_Admin_SelectByUserIDAsync(string username, string password, int User_ID) {
            this.Users_Admin_SelectByUserIDAsync(username, password, User_ID, null);
        }
        
        /// <remarks/>
        public void Users_Admin_SelectByUserIDAsync(string username, string password, int User_ID, object userState) {
            if ((this.Users_Admin_SelectByUserIDOperationCompleted == null)) {
                this.Users_Admin_SelectByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsers_Admin_SelectByUserIDOperationCompleted);
            }
            this.InvokeAsync("Users_Admin_SelectByUserID", new object[] {
                        username,
                        password,
                        User_ID}, this.Users_Admin_SelectByUserIDOperationCompleted, userState);
        }
        
        private void OnUsers_Admin_SelectByUserIDOperationCompleted(object arg) {
            if ((this.Users_Admin_SelectByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Users_Admin_SelectByUserIDCompleted(this, new Users_Admin_SelectByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Injured_Delete(string username, string password, int InjuredID) {
            object[] results = this.Invoke("Injured_Delete", new object[] {
                        username,
                        password,
                        InjuredID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Injured_DeleteAsync(string username, string password, int InjuredID) {
            this.Injured_DeleteAsync(username, password, InjuredID, null);
        }
        
        /// <remarks/>
        public void Injured_DeleteAsync(string username, string password, int InjuredID, object userState) {
            if ((this.Injured_DeleteOperationCompleted == null)) {
                this.Injured_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_DeleteOperationCompleted);
            }
            this.InvokeAsync("Injured_Delete", new object[] {
                        username,
                        password,
                        InjuredID}, this.Injured_DeleteOperationCompleted, userState);
        }
        
        private void OnInjured_DeleteOperationCompleted(object arg) {
            if ((this.Injured_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_DeleteCompleted(this, new Injured_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured Injured_Insert(string username, string password, Injured Injured) {
            object[] results = this.Invoke("Injured_Insert", new object[] {
                        username,
                        password,
                        Injured});
            return ((Injured)(results[0]));
        }
        
        /// <remarks/>
        public void Injured_InsertAsync(string username, string password, Injured Injured) {
            this.Injured_InsertAsync(username, password, Injured, null);
        }
        
        /// <remarks/>
        public void Injured_InsertAsync(string username, string password, Injured Injured, object userState) {
            if ((this.Injured_InsertOperationCompleted == null)) {
                this.Injured_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_InsertOperationCompleted);
            }
            this.InvokeAsync("Injured_Insert", new object[] {
                        username,
                        password,
                        Injured}, this.Injured_InsertOperationCompleted, userState);
        }
        
        private void OnInjured_InsertOperationCompleted(object arg) {
            if ((this.Injured_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_InsertCompleted(this, new Injured_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_All(string username, string password) {
            object[] results = this.Invoke("Injured_Select_All", new object[] {
                        username,
                        password});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_AllAsync(string username, string password) {
            this.Injured_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Injured_Select_AllAsync(string username, string password, object userState) {
            if ((this.Injured_Select_AllOperationCompleted == null)) {
                this.Injured_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_All", new object[] {
                        username,
                        password}, this.Injured_Select_AllOperationCompleted, userState);
        }
        
        private void OnInjured_Select_AllOperationCompleted(object arg) {
            if ((this.Injured_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_AllCompleted(this, new Injured_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_AccidentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_AccidentID(string username, string password, int AccidentID) {
            object[] results = this.Invoke("Injured_Select_By_AccidentID", new object[] {
                        username,
                        password,
                        AccidentID});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_AccidentIDAsync(string username, string password, int AccidentID) {
            this.Injured_Select_By_AccidentIDAsync(username, password, AccidentID, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_AccidentIDAsync(string username, string password, int AccidentID, object userState) {
            if ((this.Injured_Select_By_AccidentIDOperationCompleted == null)) {
                this.Injured_Select_By_AccidentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_AccidentIDOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_AccidentID", new object[] {
                        username,
                        password,
                        AccidentID}, this.Injured_Select_By_AccidentIDOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_AccidentIDOperationCompleted(object arg) {
            if ((this.Injured_Select_By_AccidentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_AccidentIDCompleted(this, new Injured_Select_By_AccidentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_Age", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_Age(string username, string password, int Age) {
            object[] results = this.Invoke("Injured_Select_By_Age", new object[] {
                        username,
                        password,
                        Age});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_AgeAsync(string username, string password, int Age) {
            this.Injured_Select_By_AgeAsync(username, password, Age, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_AgeAsync(string username, string password, int Age, object userState) {
            if ((this.Injured_Select_By_AgeOperationCompleted == null)) {
                this.Injured_Select_By_AgeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_AgeOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_Age", new object[] {
                        username,
                        password,
                        Age}, this.Injured_Select_By_AgeOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_AgeOperationCompleted(object arg) {
            if ((this.Injured_Select_By_AgeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_AgeCompleted(this, new Injured_Select_By_AgeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_Civil_Military", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_Civil_Military(string username, string password, string Civil_Military) {
            object[] results = this.Invoke("Injured_Select_By_Civil_Military", new object[] {
                        username,
                        password,
                        Civil_Military});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_Civil_MilitaryAsync(string username, string password, string Civil_Military) {
            this.Injured_Select_By_Civil_MilitaryAsync(username, password, Civil_Military, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_Civil_MilitaryAsync(string username, string password, string Civil_Military, object userState) {
            if ((this.Injured_Select_By_Civil_MilitaryOperationCompleted == null)) {
                this.Injured_Select_By_Civil_MilitaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_Civil_MilitaryOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_Civil_Military", new object[] {
                        username,
                        password,
                        Civil_Military}, this.Injured_Select_By_Civil_MilitaryOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_Civil_MilitaryOperationCompleted(object arg) {
            if ((this.Injured_Select_By_Civil_MilitaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_Civil_MilitaryCompleted(this, new Injured_Select_By_Civil_MilitaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_Date", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_Date(string username, string password, System.DateTime Date) {
            object[] results = this.Invoke("Injured_Select_By_Date", new object[] {
                        username,
                        password,
                        Date});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_DateAsync(string username, string password, System.DateTime Date) {
            this.Injured_Select_By_DateAsync(username, password, Date, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_DateAsync(string username, string password, System.DateTime Date, object userState) {
            if ((this.Injured_Select_By_DateOperationCompleted == null)) {
                this.Injured_Select_By_DateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_DateOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_Date", new object[] {
                        username,
                        password,
                        Date}, this.Injured_Select_By_DateOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_DateOperationCompleted(object arg) {
            if ((this.Injured_Select_By_DateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_DateCompleted(this, new Injured_Select_By_DateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_InjuredID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_InjuredID(string username, string password, int InjuredID) {
            object[] results = this.Invoke("Injured_Select_By_InjuredID", new object[] {
                        username,
                        password,
                        InjuredID});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_InjuredIDAsync(string username, string password, int InjuredID) {
            this.Injured_Select_By_InjuredIDAsync(username, password, InjuredID, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_InjuredIDAsync(string username, string password, int InjuredID, object userState) {
            if ((this.Injured_Select_By_InjuredIDOperationCompleted == null)) {
                this.Injured_Select_By_InjuredIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_InjuredIDOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_InjuredID", new object[] {
                        username,
                        password,
                        InjuredID}, this.Injured_Select_By_InjuredIDOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_InjuredIDOperationCompleted(object arg) {
            if ((this.Injured_Select_By_InjuredIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_InjuredIDCompleted(this, new Injured_Select_By_InjuredIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_Name", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_Name(string username, string password, string Name) {
            object[] results = this.Invoke("Injured_Select_By_Name", new object[] {
                        username,
                        password,
                        Name});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_NameAsync(string username, string password, string Name) {
            this.Injured_Select_By_NameAsync(username, password, Name, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_NameAsync(string username, string password, string Name, object userState) {
            if ((this.Injured_Select_By_NameOperationCompleted == null)) {
                this.Injured_Select_By_NameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_NameOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_Name", new object[] {
                        username,
                        password,
                        Name}, this.Injured_Select_By_NameOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_NameOperationCompleted(object arg) {
            if ((this.Injured_Select_By_NameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_NameCompleted(this, new Injured_Select_By_NameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Injured_Select_By_Rank", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Injured[] Injured_Select_By_Rank(string username, string password, string Rank) {
            object[] results = this.Invoke("Injured_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank});
            return ((Injured[])(results[0]));
        }
        
        /// <remarks/>
        public void Injured_Select_By_RankAsync(string username, string password, string Rank) {
            this.Injured_Select_By_RankAsync(username, password, Rank, null);
        }
        
        /// <remarks/>
        public void Injured_Select_By_RankAsync(string username, string password, string Rank, object userState) {
            if ((this.Injured_Select_By_RankOperationCompleted == null)) {
                this.Injured_Select_By_RankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInjured_Select_By_RankOperationCompleted);
            }
            this.InvokeAsync("Injured_Select_By_Rank", new object[] {
                        username,
                        password,
                        Rank}, this.Injured_Select_By_RankOperationCompleted, userState);
        }
        
        private void OnInjured_Select_By_RankOperationCompleted(object arg) {
            if ((this.Injured_Select_By_RankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Injured_Select_By_RankCompleted(this, new Injured_Select_By_RankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Images_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Images Images_Insert(string username, string password, Images Images) {
            object[] results = this.Invoke("Images_Insert", new object[] {
                        username,
                        password,
                        Images});
            return ((Images)(results[0]));
        }
        
        /// <remarks/>
        public void Images_InsertAsync(string username, string password, Images Images) {
            this.Images_InsertAsync(username, password, Images, null);
        }
        
        /// <remarks/>
        public void Images_InsertAsync(string username, string password, Images Images, object userState) {
            if ((this.Images_InsertOperationCompleted == null)) {
                this.Images_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImages_InsertOperationCompleted);
            }
            this.InvokeAsync("Images_Insert", new object[] {
                        username,
                        password,
                        Images}, this.Images_InsertOperationCompleted, userState);
        }
        
        private void OnImages_InsertOperationCompleted(object arg) {
            if ((this.Images_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Images_InsertCompleted(this, new Images_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Images_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Images[] Images_Select_All(string username, string password) {
            object[] results = this.Invoke("Images_Select_All", new object[] {
                        username,
                        password});
            return ((Images[])(results[0]));
        }
        
        /// <remarks/>
        public void Images_Select_AllAsync(string username, string password) {
            this.Images_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Images_Select_AllAsync(string username, string password, object userState) {
            if ((this.Images_Select_AllOperationCompleted == null)) {
                this.Images_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImages_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Images_Select_All", new object[] {
                        username,
                        password}, this.Images_Select_AllOperationCompleted, userState);
        }
        
        private void OnImages_Select_AllOperationCompleted(object arg) {
            if ((this.Images_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Images_Select_AllCompleted(this, new Images_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Images_Select_By_BuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Images[] Images_Select_By_BuildingID(string username, string password, int BuildingID) {
            object[] results = this.Invoke("Images_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID});
            return ((Images[])(results[0]));
        }
        
        /// <remarks/>
        public void Images_Select_By_BuildingIDAsync(string username, string password, int BuildingID) {
            this.Images_Select_By_BuildingIDAsync(username, password, BuildingID, null);
        }
        
        /// <remarks/>
        public void Images_Select_By_BuildingIDAsync(string username, string password, int BuildingID, object userState) {
            if ((this.Images_Select_By_BuildingIDOperationCompleted == null)) {
                this.Images_Select_By_BuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImages_Select_By_BuildingIDOperationCompleted);
            }
            this.InvokeAsync("Images_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID}, this.Images_Select_By_BuildingIDOperationCompleted, userState);
        }
        
        private void OnImages_Select_By_BuildingIDOperationCompleted(object arg) {
            if ((this.Images_Select_By_BuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Images_Select_By_BuildingIDCompleted(this, new Images_Select_By_BuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Images_Select_By_ImageDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Images[] Images_Select_By_ImageDescription(string username, string password, string ImageDescription) {
            object[] results = this.Invoke("Images_Select_By_ImageDescription", new object[] {
                        username,
                        password,
                        ImageDescription});
            return ((Images[])(results[0]));
        }
        
        /// <remarks/>
        public void Images_Select_By_ImageDescriptionAsync(string username, string password, string ImageDescription) {
            this.Images_Select_By_ImageDescriptionAsync(username, password, ImageDescription, null);
        }
        
        /// <remarks/>
        public void Images_Select_By_ImageDescriptionAsync(string username, string password, string ImageDescription, object userState) {
            if ((this.Images_Select_By_ImageDescriptionOperationCompleted == null)) {
                this.Images_Select_By_ImageDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImages_Select_By_ImageDescriptionOperationCompleted);
            }
            this.InvokeAsync("Images_Select_By_ImageDescription", new object[] {
                        username,
                        password,
                        ImageDescription}, this.Images_Select_By_ImageDescriptionOperationCompleted, userState);
        }
        
        private void OnImages_Select_By_ImageDescriptionOperationCompleted(object arg) {
            if ((this.Images_Select_By_ImageDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Images_Select_By_ImageDescriptionCompleted(this, new Images_Select_By_ImageDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors Floors_Insert(string username, string password, Floors Floors) {
            object[] results = this.Invoke("Floors_Insert", new object[] {
                        username,
                        password,
                        Floors});
            return ((Floors)(results[0]));
        }
        
        /// <remarks/>
        public void Floors_InsertAsync(string username, string password, Floors Floors) {
            this.Floors_InsertAsync(username, password, Floors, null);
        }
        
        /// <remarks/>
        public void Floors_InsertAsync(string username, string password, Floors Floors, object userState) {
            if ((this.Floors_InsertOperationCompleted == null)) {
                this.Floors_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_InsertOperationCompleted);
            }
            this.InvokeAsync("Floors_Insert", new object[] {
                        username,
                        password,
                        Floors}, this.Floors_InsertOperationCompleted, userState);
        }
        
        private void OnFloors_InsertOperationCompleted(object arg) {
            if ((this.Floors_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_InsertCompleted(this, new Floors_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Update", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors Floors_Update(string username, string password, Floors Floors) {
            object[] results = this.Invoke("Floors_Update", new object[] {
                        username,
                        password,
                        Floors});
            return ((Floors)(results[0]));
        }
        
        /// <remarks/>
        public void Floors_UpdateAsync(string username, string password, Floors Floors) {
            this.Floors_UpdateAsync(username, password, Floors, null);
        }
        
        /// <remarks/>
        public void Floors_UpdateAsync(string username, string password, Floors Floors, object userState) {
            if ((this.Floors_UpdateOperationCompleted == null)) {
                this.Floors_UpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_UpdateOperationCompleted);
            }
            this.InvokeAsync("Floors_Update", new object[] {
                        username,
                        password,
                        Floors}, this.Floors_UpdateOperationCompleted, userState);
        }
        
        private void OnFloors_UpdateOperationCompleted(object arg) {
            if ((this.Floors_UpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_UpdateCompleted(this, new Floors_UpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_All(string username, string password) {
            object[] results = this.Invoke("Floors_Select_All", new object[] {
                        username,
                        password});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_AllAsync(string username, string password) {
            this.Floors_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void Floors_Select_AllAsync(string username, string password, object userState) {
            if ((this.Floors_Select_AllOperationCompleted == null)) {
                this.Floors_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_AllOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_All", new object[] {
                        username,
                        password}, this.Floors_Select_AllOperationCompleted, userState);
        }
        
        private void OnFloors_Select_AllOperationCompleted(object arg) {
            if ((this.Floors_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_AllCompleted(this, new Floors_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_BuildingID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_BuildingID(string username, string password, int BuildingID) {
            object[] results = this.Invoke("Floors_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_BuildingIDAsync(string username, string password, int BuildingID) {
            this.Floors_Select_By_BuildingIDAsync(username, password, BuildingID, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_BuildingIDAsync(string username, string password, int BuildingID, object userState) {
            if ((this.Floors_Select_By_BuildingIDOperationCompleted == null)) {
                this.Floors_Select_By_BuildingIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_BuildingIDOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_BuildingID", new object[] {
                        username,
                        password,
                        BuildingID}, this.Floors_Select_By_BuildingIDOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_BuildingIDOperationCompleted(object arg) {
            if ((this.Floors_Select_By_BuildingIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_BuildingIDCompleted(this, new Floors_Select_By_BuildingIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_CarbonDioxideExtinguishersNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_CarbonDioxideExtinguishersNumbers(string username, string password, string CarbonDioxideExtinguishersNumbers) {
            object[] results = this.Invoke("Floors_Select_By_CarbonDioxideExtinguishersNumbers", new object[] {
                        username,
                        password,
                        CarbonDioxideExtinguishersNumbers});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_CarbonDioxideExtinguishersNumbersAsync(string username, string password, string CarbonDioxideExtinguishersNumbers) {
            this.Floors_Select_By_CarbonDioxideExtinguishersNumbersAsync(username, password, CarbonDioxideExtinguishersNumbers, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_CarbonDioxideExtinguishersNumbersAsync(string username, string password, string CarbonDioxideExtinguishersNumbers, object userState) {
            if ((this.Floors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted == null)) {
                this.Floors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_CarbonDioxideExtinguishersNumbers", new object[] {
                        username,
                        password,
                        CarbonDioxideExtinguishersNumbers}, this.Floors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_CarbonDioxideExtinguishersNumbersOperationCompleted(object arg) {
            if ((this.Floors_Select_By_CarbonDioxideExtinguishersNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_CarbonDioxideExtinguishersNumbersCompleted(this, new Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_PowderExtinguishersNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_PowderExtinguishersNumber(string username, string password, string PowderExtinguishersNumber) {
            object[] results = this.Invoke("Floors_Select_By_PowderExtinguishersNumber", new object[] {
                        username,
                        password,
                        PowderExtinguishersNumber});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_PowderExtinguishersNumberAsync(string username, string password, string PowderExtinguishersNumber) {
            this.Floors_Select_By_PowderExtinguishersNumberAsync(username, password, PowderExtinguishersNumber, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_PowderExtinguishersNumberAsync(string username, string password, string PowderExtinguishersNumber, object userState) {
            if ((this.Floors_Select_By_PowderExtinguishersNumberOperationCompleted == null)) {
                this.Floors_Select_By_PowderExtinguishersNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_PowderExtinguishersNumberOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_PowderExtinguishersNumber", new object[] {
                        username,
                        password,
                        PowderExtinguishersNumber}, this.Floors_Select_By_PowderExtinguishersNumberOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_PowderExtinguishersNumberOperationCompleted(object arg) {
            if ((this.Floors_Select_By_PowderExtinguishersNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_PowderExtinguishersNumberCompleted(this, new Floors_Select_By_PowderExtinguishersNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_FoamExtinguishersNumbers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_FoamExtinguishersNumbers(string username, string password, string FoamExtinguishersNumbers) {
            object[] results = this.Invoke("Floors_Select_By_FoamExtinguishersNumbers", new object[] {
                        username,
                        password,
                        FoamExtinguishersNumbers});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_FoamExtinguishersNumbersAsync(string username, string password, string FoamExtinguishersNumbers) {
            this.Floors_Select_By_FoamExtinguishersNumbersAsync(username, password, FoamExtinguishersNumbers, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_FoamExtinguishersNumbersAsync(string username, string password, string FoamExtinguishersNumbers, object userState) {
            if ((this.Floors_Select_By_FoamExtinguishersNumbersOperationCompleted == null)) {
                this.Floors_Select_By_FoamExtinguishersNumbersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_FoamExtinguishersNumbersOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_FoamExtinguishersNumbers", new object[] {
                        username,
                        password,
                        FoamExtinguishersNumbers}, this.Floors_Select_By_FoamExtinguishersNumbersOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_FoamExtinguishersNumbersOperationCompleted(object arg) {
            if ((this.Floors_Select_By_FoamExtinguishersNumbersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_FoamExtinguishersNumbersCompleted(this, new Floors_Select_By_FoamExtinguishersNumbersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_PowderExtinguishersWeight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_PowderExtinguishersWeight(string username, string password, int PowderExtinguishersWeight) {
            object[] results = this.Invoke("Floors_Select_By_PowderExtinguishersWeight", new object[] {
                        username,
                        password,
                        PowderExtinguishersWeight});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_PowderExtinguishersWeightAsync(string username, string password, int PowderExtinguishersWeight) {
            this.Floors_Select_By_PowderExtinguishersWeightAsync(username, password, PowderExtinguishersWeight, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_PowderExtinguishersWeightAsync(string username, string password, int PowderExtinguishersWeight, object userState) {
            if ((this.Floors_Select_By_PowderExtinguishersWeightOperationCompleted == null)) {
                this.Floors_Select_By_PowderExtinguishersWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_PowderExtinguishersWeightOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_PowderExtinguishersWeight", new object[] {
                        username,
                        password,
                        PowderExtinguishersWeight}, this.Floors_Select_By_PowderExtinguishersWeightOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_PowderExtinguishersWeightOperationCompleted(object arg) {
            if ((this.Floors_Select_By_PowderExtinguishersWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_PowderExtinguishersWeightCompleted(this, new Floors_Select_By_PowderExtinguishersWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_CarbonDioxideExtinguishersWeight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_CarbonDioxideExtinguishersWeight(string username, string password, int CarbonDioxideExtinguishersWeight) {
            object[] results = this.Invoke("Floors_Select_By_CarbonDioxideExtinguishersWeight", new object[] {
                        username,
                        password,
                        CarbonDioxideExtinguishersWeight});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_CarbonDioxideExtinguishersWeightAsync(string username, string password, int CarbonDioxideExtinguishersWeight) {
            this.Floors_Select_By_CarbonDioxideExtinguishersWeightAsync(username, password, CarbonDioxideExtinguishersWeight, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_CarbonDioxideExtinguishersWeightAsync(string username, string password, int CarbonDioxideExtinguishersWeight, object userState) {
            if ((this.Floors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted == null)) {
                this.Floors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_CarbonDioxideExtinguishersWeight", new object[] {
                        username,
                        password,
                        CarbonDioxideExtinguishersWeight}, this.Floors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_CarbonDioxideExtinguishersWeightOperationCompleted(object arg) {
            if ((this.Floors_Select_By_CarbonDioxideExtinguishersWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_CarbonDioxideExtinguishersWeightCompleted(this, new Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Floors_Select_By_FoamExtinguishersWeight", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Floors[] Floors_Select_By_FoamExtinguishersWeight(string username, string password, int FoamExtinguishersWeight) {
            object[] results = this.Invoke("Floors_Select_By_FoamExtinguishersWeight", new object[] {
                        username,
                        password,
                        FoamExtinguishersWeight});
            return ((Floors[])(results[0]));
        }
        
        /// <remarks/>
        public void Floors_Select_By_FoamExtinguishersWeightAsync(string username, string password, int FoamExtinguishersWeight) {
            this.Floors_Select_By_FoamExtinguishersWeightAsync(username, password, FoamExtinguishersWeight, null);
        }
        
        /// <remarks/>
        public void Floors_Select_By_FoamExtinguishersWeightAsync(string username, string password, int FoamExtinguishersWeight, object userState) {
            if ((this.Floors_Select_By_FoamExtinguishersWeightOperationCompleted == null)) {
                this.Floors_Select_By_FoamExtinguishersWeightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFloors_Select_By_FoamExtinguishersWeightOperationCompleted);
            }
            this.InvokeAsync("Floors_Select_By_FoamExtinguishersWeight", new object[] {
                        username,
                        password,
                        FoamExtinguishersWeight}, this.Floors_Select_By_FoamExtinguishersWeightOperationCompleted, userState);
        }
        
        private void OnFloors_Select_By_FoamExtinguishersWeightOperationCompleted(object arg) {
            if ((this.Floors_Select_By_FoamExtinguishersWeightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Floors_Select_By_FoamExtinguishersWeightCompleted(this, new Floors_Select_By_FoamExtinguishersWeightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FFstations_Delete(string username, string password, int FFstationsID) {
            object[] results = this.Invoke("FFstations_Delete", new object[] {
                        username,
                        password,
                        FFstationsID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_DeleteAsync(string username, string password, int FFstationsID) {
            this.FFstations_DeleteAsync(username, password, FFstationsID, null);
        }
        
        /// <remarks/>
        public void FFstations_DeleteAsync(string username, string password, int FFstationsID, object userState) {
            if ((this.FFstations_DeleteOperationCompleted == null)) {
                this.FFstations_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_DeleteOperationCompleted);
            }
            this.InvokeAsync("FFstations_Delete", new object[] {
                        username,
                        password,
                        FFstationsID}, this.FFstations_DeleteOperationCompleted, userState);
        }
        
        private void OnFFstations_DeleteOperationCompleted(object arg) {
            if ((this.FFstations_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_DeleteCompleted(this, new FFstations_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations FFstations_Insert(string username, string password, FFstations FFstations) {
            object[] results = this.Invoke("FFstations_Insert", new object[] {
                        username,
                        password,
                        FFstations});
            return ((FFstations)(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_InsertAsync(string username, string password, FFstations FFstations) {
            this.FFstations_InsertAsync(username, password, FFstations, null);
        }
        
        /// <remarks/>
        public void FFstations_InsertAsync(string username, string password, FFstations FFstations, object userState) {
            if ((this.FFstations_InsertOperationCompleted == null)) {
                this.FFstations_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_InsertOperationCompleted);
            }
            this.InvokeAsync("FFstations_Insert", new object[] {
                        username,
                        password,
                        FFstations}, this.FFstations_InsertOperationCompleted, userState);
        }
        
        private void OnFFstations_InsertOperationCompleted(object arg) {
            if ((this.FFstations_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_InsertCompleted(this, new FFstations_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_All(string username, string password) {
            object[] results = this.Invoke("FFstations_Select_All", new object[] {
                        username,
                        password});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_AllAsync(string username, string password) {
            this.FFstations_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_AllAsync(string username, string password, object userState) {
            if ((this.FFstations_Select_AllOperationCompleted == null)) {
                this.FFstations_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_AllOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_All", new object[] {
                        username,
                        password}, this.FFstations_Select_AllOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_AllOperationCompleted(object arg) {
            if ((this.FFstations_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_AllCompleted(this, new FFstations_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_AreaName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_AreaName(string username, string password, string AreaName) {
            object[] results = this.Invoke("FFstations_Select_By_AreaName", new object[] {
                        username,
                        password,
                        AreaName});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_AreaNameAsync(string username, string password, string AreaName) {
            this.FFstations_Select_By_AreaNameAsync(username, password, AreaName, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_AreaNameAsync(string username, string password, string AreaName, object userState) {
            if ((this.FFstations_Select_By_AreaNameOperationCompleted == null)) {
                this.FFstations_Select_By_AreaNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_AreaNameOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_AreaName", new object[] {
                        username,
                        password,
                        AreaName}, this.FFstations_Select_By_AreaNameOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_AreaNameOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_AreaNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_AreaNameCompleted(this, new FFstations_Select_By_AreaNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_CarsNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_CarsNumber(string username, string password, string CarsNumber) {
            object[] results = this.Invoke("FFstations_Select_By_CarsNumber", new object[] {
                        username,
                        password,
                        CarsNumber});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_CarsNumberAsync(string username, string password, string CarsNumber) {
            this.FFstations_Select_By_CarsNumberAsync(username, password, CarsNumber, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_CarsNumberAsync(string username, string password, string CarsNumber, object userState) {
            if ((this.FFstations_Select_By_CarsNumberOperationCompleted == null)) {
                this.FFstations_Select_By_CarsNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_CarsNumberOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_CarsNumber", new object[] {
                        username,
                        password,
                        CarsNumber}, this.FFstations_Select_By_CarsNumberOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_CarsNumberOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_CarsNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_CarsNumberCompleted(this, new FFstations_Select_By_CarsNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_Equipments", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_Equipments(string username, string password, string Equipments) {
            object[] results = this.Invoke("FFstations_Select_By_Equipments", new object[] {
                        username,
                        password,
                        Equipments});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_EquipmentsAsync(string username, string password, string Equipments) {
            this.FFstations_Select_By_EquipmentsAsync(username, password, Equipments, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_EquipmentsAsync(string username, string password, string Equipments, object userState) {
            if ((this.FFstations_Select_By_EquipmentsOperationCompleted == null)) {
                this.FFstations_Select_By_EquipmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_EquipmentsOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_Equipments", new object[] {
                        username,
                        password,
                        Equipments}, this.FFstations_Select_By_EquipmentsOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_EquipmentsOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_EquipmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_EquipmentsCompleted(this, new FFstations_Select_By_EquipmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_FF_ID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_FF_ID(string username, string password, int FF_ID) {
            object[] results = this.Invoke("FFstations_Select_By_FF_ID", new object[] {
                        username,
                        password,
                        FF_ID});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_FF_IDAsync(string username, string password, int FF_ID) {
            this.FFstations_Select_By_FF_IDAsync(username, password, FF_ID, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_FF_IDAsync(string username, string password, int FF_ID, object userState) {
            if ((this.FFstations_Select_By_FF_IDOperationCompleted == null)) {
                this.FFstations_Select_By_FF_IDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_FF_IDOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_FF_ID", new object[] {
                        username,
                        password,
                        FF_ID}, this.FFstations_Select_By_FF_IDOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_FF_IDOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_FF_IDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_FF_IDCompleted(this, new FFstations_Select_By_FF_IDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_OfficersNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_OfficersNumber(string username, string password, string OfficersNumber) {
            object[] results = this.Invoke("FFstations_Select_By_OfficersNumber", new object[] {
                        username,
                        password,
                        OfficersNumber});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_OfficersNumberAsync(string username, string password, string OfficersNumber) {
            this.FFstations_Select_By_OfficersNumberAsync(username, password, OfficersNumber, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_OfficersNumberAsync(string username, string password, string OfficersNumber, object userState) {
            if ((this.FFstations_Select_By_OfficersNumberOperationCompleted == null)) {
                this.FFstations_Select_By_OfficersNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_OfficersNumberOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_OfficersNumber", new object[] {
                        username,
                        password,
                        OfficersNumber}, this.FFstations_Select_By_OfficersNumberOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_OfficersNumberOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_OfficersNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_OfficersNumberCompleted(this, new FFstations_Select_By_OfficersNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_Sector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_Sector(string username, string password, string Sector) {
            object[] results = this.Invoke("FFstations_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SectorAsync(string username, string password, string Sector) {
            this.FFstations_Select_By_SectorAsync(username, password, Sector, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SectorAsync(string username, string password, string Sector, object userState) {
            if ((this.FFstations_Select_By_SectorOperationCompleted == null)) {
                this.FFstations_Select_By_SectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_SectorOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector}, this.FFstations_Select_By_SectorOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_SectorOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_SectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_SectorCompleted(this, new FFstations_Select_By_SectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_Signs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_Signs(string username, string password, string Signs) {
            object[] results = this.Invoke("FFstations_Select_By_Signs", new object[] {
                        username,
                        password,
                        Signs});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SignsAsync(string username, string password, string Signs) {
            this.FFstations_Select_By_SignsAsync(username, password, Signs, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SignsAsync(string username, string password, string Signs, object userState) {
            if ((this.FFstations_Select_By_SignsOperationCompleted == null)) {
                this.FFstations_Select_By_SignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_SignsOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_Signs", new object[] {
                        username,
                        password,
                        Signs}, this.FFstations_Select_By_SignsOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_SignsOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_SignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_SignsCompleted(this, new FFstations_Select_By_SignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_SoliderNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_SoliderNumber(string username, string password, string SoliderNumber) {
            object[] results = this.Invoke("FFstations_Select_By_SoliderNumber", new object[] {
                        username,
                        password,
                        SoliderNumber});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SoliderNumberAsync(string username, string password, string SoliderNumber) {
            this.FFstations_Select_By_SoliderNumberAsync(username, password, SoliderNumber, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_SoliderNumberAsync(string username, string password, string SoliderNumber, object userState) {
            if ((this.FFstations_Select_By_SoliderNumberOperationCompleted == null)) {
                this.FFstations_Select_By_SoliderNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_SoliderNumberOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_SoliderNumber", new object[] {
                        username,
                        password,
                        SoliderNumber}, this.FFstations_Select_By_SoliderNumberOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_SoliderNumberOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_SoliderNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_SoliderNumberCompleted(this, new FFstations_Select_By_SoliderNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_Street", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_Street(string username, string password, string Street) {
            object[] results = this.Invoke("FFstations_Select_By_Street", new object[] {
                        username,
                        password,
                        Street});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_StreetAsync(string username, string password, string Street) {
            this.FFstations_Select_By_StreetAsync(username, password, Street, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_StreetAsync(string username, string password, string Street, object userState) {
            if ((this.FFstations_Select_By_StreetOperationCompleted == null)) {
                this.FFstations_Select_By_StreetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_StreetOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_Street", new object[] {
                        username,
                        password,
                        Street}, this.FFstations_Select_By_StreetOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_StreetOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_StreetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_StreetCompleted(this, new FFstations_Select_By_StreetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_UserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_UserID(string username, string password, int UserID) {
            object[] results = this.Invoke("FFstations_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_UserIDAsync(string username, string password, int UserID) {
            this.FFstations_Select_By_UserIDAsync(username, password, UserID, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_UserIDAsync(string username, string password, int UserID, object userState) {
            if ((this.FFstations_Select_By_UserIDOperationCompleted == null)) {
                this.FFstations_Select_By_UserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_UserIDOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_UserID", new object[] {
                        username,
                        password,
                        UserID}, this.FFstations_Select_By_UserIDOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_UserIDOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_UserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_UserIDCompleted(this, new FFstations_Select_By_UserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FFstations_Select_By_ZoneNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FFstations[] FFstations_Select_By_ZoneNumber(string username, string password, string ZoneNumber) {
            object[] results = this.Invoke("FFstations_Select_By_ZoneNumber", new object[] {
                        username,
                        password,
                        ZoneNumber});
            return ((FFstations[])(results[0]));
        }
        
        /// <remarks/>
        public void FFstations_Select_By_ZoneNumberAsync(string username, string password, string ZoneNumber) {
            this.FFstations_Select_By_ZoneNumberAsync(username, password, ZoneNumber, null);
        }
        
        /// <remarks/>
        public void FFstations_Select_By_ZoneNumberAsync(string username, string password, string ZoneNumber, object userState) {
            if ((this.FFstations_Select_By_ZoneNumberOperationCompleted == null)) {
                this.FFstations_Select_By_ZoneNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFFstations_Select_By_ZoneNumberOperationCompleted);
            }
            this.InvokeAsync("FFstations_Select_By_ZoneNumber", new object[] {
                        username,
                        password,
                        ZoneNumber}, this.FFstations_Select_By_ZoneNumberOperationCompleted, userState);
        }
        
        private void OnFFstations_Select_By_ZoneNumberOperationCompleted(object arg) {
            if ((this.FFstations_Select_By_ZoneNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FFstations_Select_By_ZoneNumberCompleted(this, new FFstations_Select_By_ZoneNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FF_pumps_Delete(string username, string password, int FF_pumpsID) {
            object[] results = this.Invoke("FF_pumps_Delete", new object[] {
                        username,
                        password,
                        FF_pumpsID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_DeleteAsync(string username, string password, int FF_pumpsID) {
            this.FF_pumps_DeleteAsync(username, password, FF_pumpsID, null);
        }
        
        /// <remarks/>
        public void FF_pumps_DeleteAsync(string username, string password, int FF_pumpsID, object userState) {
            if ((this.FF_pumps_DeleteOperationCompleted == null)) {
                this.FF_pumps_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_DeleteOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Delete", new object[] {
                        username,
                        password,
                        FF_pumpsID}, this.FF_pumps_DeleteOperationCompleted, userState);
        }
        
        private void OnFF_pumps_DeleteOperationCompleted(object arg) {
            if ((this.FF_pumps_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_DeleteCompleted(this, new FF_pumps_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps FF_pumps_Insert(string username, string password, FF_pumps FF_pumps) {
            object[] results = this.Invoke("FF_pumps_Insert", new object[] {
                        username,
                        password,
                        FF_pumps});
            return ((FF_pumps)(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_InsertAsync(string username, string password, FF_pumps FF_pumps) {
            this.FF_pumps_InsertAsync(username, password, FF_pumps, null);
        }
        
        /// <remarks/>
        public void FF_pumps_InsertAsync(string username, string password, FF_pumps FF_pumps, object userState) {
            if ((this.FF_pumps_InsertOperationCompleted == null)) {
                this.FF_pumps_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_InsertOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Insert", new object[] {
                        username,
                        password,
                        FF_pumps}, this.FF_pumps_InsertOperationCompleted, userState);
        }
        
        private void OnFF_pumps_InsertOperationCompleted(object arg) {
            if ((this.FF_pumps_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_InsertCompleted(this, new FF_pumps_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_All(string username, string password) {
            object[] results = this.Invoke("FF_pumps_Select_All", new object[] {
                        username,
                        password});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_AllAsync(string username, string password) {
            this.FF_pumps_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_AllAsync(string username, string password, object userState) {
            if ((this.FF_pumps_Select_AllOperationCompleted == null)) {
                this.FF_pumps_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_AllOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_All", new object[] {
                        username,
                        password}, this.FF_pumps_Select_AllOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_AllOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_AllCompleted(this, new FF_pumps_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_Address", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_Address(string username, string password, string Address) {
            object[] results = this.Invoke("FF_pumps_Select_By_Address", new object[] {
                        username,
                        password,
                        Address});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_AddressAsync(string username, string password, string Address) {
            this.FF_pumps_Select_By_AddressAsync(username, password, Address, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_AddressAsync(string username, string password, string Address, object userState) {
            if ((this.FF_pumps_Select_By_AddressOperationCompleted == null)) {
                this.FF_pumps_Select_By_AddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_AddressOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_Address", new object[] {
                        username,
                        password,
                        Address}, this.FF_pumps_Select_By_AddressOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_AddressOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_AddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_AddressCompleted(this, new FF_pumps_Select_By_AddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_Area", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_Area(string username, string password, string Area) {
            object[] results = this.Invoke("FF_pumps_Select_By_Area", new object[] {
                        username,
                        password,
                        Area});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_AreaAsync(string username, string password, string Area) {
            this.FF_pumps_Select_By_AreaAsync(username, password, Area, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_AreaAsync(string username, string password, string Area, object userState) {
            if ((this.FF_pumps_Select_By_AreaOperationCompleted == null)) {
                this.FF_pumps_Select_By_AreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_AreaOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_Area", new object[] {
                        username,
                        password,
                        Area}, this.FF_pumps_Select_By_AreaOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_AreaOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_AreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_AreaCompleted(this, new FF_pumps_Select_By_AreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_FF_pumpsID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_FF_pumpsID(string username, string password, int FF_pumpsID) {
            object[] results = this.Invoke("FF_pumps_Select_By_FF_pumpsID", new object[] {
                        username,
                        password,
                        FF_pumpsID});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_FF_pumpsIDAsync(string username, string password, int FF_pumpsID) {
            this.FF_pumps_Select_By_FF_pumpsIDAsync(username, password, FF_pumpsID, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_FF_pumpsIDAsync(string username, string password, int FF_pumpsID, object userState) {
            if ((this.FF_pumps_Select_By_FF_pumpsIDOperationCompleted == null)) {
                this.FF_pumps_Select_By_FF_pumpsIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_FF_pumpsIDOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_FF_pumpsID", new object[] {
                        username,
                        password,
                        FF_pumpsID}, this.FF_pumps_Select_By_FF_pumpsIDOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_FF_pumpsIDOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_FF_pumpsIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_FF_pumpsIDCompleted(this, new FF_pumps_Select_By_FF_pumpsIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_PumpNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_PumpNumber(string username, string password, string PumpNumber) {
            object[] results = this.Invoke("FF_pumps_Select_By_PumpNumber", new object[] {
                        username,
                        password,
                        PumpNumber});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_PumpNumberAsync(string username, string password, string PumpNumber) {
            this.FF_pumps_Select_By_PumpNumberAsync(username, password, PumpNumber, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_PumpNumberAsync(string username, string password, string PumpNumber, object userState) {
            if ((this.FF_pumps_Select_By_PumpNumberOperationCompleted == null)) {
                this.FF_pumps_Select_By_PumpNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_PumpNumberOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_PumpNumber", new object[] {
                        username,
                        password,
                        PumpNumber}, this.FF_pumps_Select_By_PumpNumberOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_PumpNumberOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_PumpNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_PumpNumberCompleted(this, new FF_pumps_Select_By_PumpNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_Sector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_Sector(string username, string password, string Sector) {
            object[] results = this.Invoke("FF_pumps_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_SectorAsync(string username, string password, string Sector) {
            this.FF_pumps_Select_By_SectorAsync(username, password, Sector, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_SectorAsync(string username, string password, string Sector, object userState) {
            if ((this.FF_pumps_Select_By_SectorOperationCompleted == null)) {
                this.FF_pumps_Select_By_SectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_SectorOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_Sector", new object[] {
                        username,
                        password,
                        Sector}, this.FF_pumps_Select_By_SectorOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_SectorOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_SectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_SectorCompleted(this, new FF_pumps_Select_By_SectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_Signs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_Signs(string username, string password, string Signs) {
            object[] results = this.Invoke("FF_pumps_Select_By_Signs", new object[] {
                        username,
                        password,
                        Signs});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_SignsAsync(string username, string password, string Signs) {
            this.FF_pumps_Select_By_SignsAsync(username, password, Signs, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_SignsAsync(string username, string password, string Signs, object userState) {
            if ((this.FF_pumps_Select_By_SignsOperationCompleted == null)) {
                this.FF_pumps_Select_By_SignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_SignsOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_Signs", new object[] {
                        username,
                        password,
                        Signs}, this.FF_pumps_Select_By_SignsOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_SignsOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_SignsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_SignsCompleted(this, new FF_pumps_Select_By_SignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_pumps_Select_By_Status", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_pumps[] FF_pumps_Select_By_Status(string username, string password, string Status) {
            object[] results = this.Invoke("FF_pumps_Select_By_Status", new object[] {
                        username,
                        password,
                        Status});
            return ((FF_pumps[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_StatusAsync(string username, string password, string Status) {
            this.FF_pumps_Select_By_StatusAsync(username, password, Status, null);
        }
        
        /// <remarks/>
        public void FF_pumps_Select_By_StatusAsync(string username, string password, string Status, object userState) {
            if ((this.FF_pumps_Select_By_StatusOperationCompleted == null)) {
                this.FF_pumps_Select_By_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_pumps_Select_By_StatusOperationCompleted);
            }
            this.InvokeAsync("FF_pumps_Select_By_Status", new object[] {
                        username,
                        password,
                        Status}, this.FF_pumps_Select_By_StatusOperationCompleted, userState);
        }
        
        private void OnFF_pumps_Select_By_StatusOperationCompleted(object arg) {
            if ((this.FF_pumps_Select_By_StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_pumps_Select_By_StatusCompleted(this, new FF_pumps_Select_By_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FF_ManPower_Delete(string username, string password, int FF_ManPowerID) {
            object[] results = this.Invoke("FF_ManPower_Delete", new object[] {
                        username,
                        password,
                        FF_ManPowerID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_DeleteAsync(string username, string password, int FF_ManPowerID) {
            this.FF_ManPower_DeleteAsync(username, password, FF_ManPowerID, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_DeleteAsync(string username, string password, int FF_ManPowerID, object userState) {
            if ((this.FF_ManPower_DeleteOperationCompleted == null)) {
                this.FF_ManPower_DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_DeleteOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Delete", new object[] {
                        username,
                        password,
                        FF_ManPowerID}, this.FF_ManPower_DeleteOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_DeleteOperationCompleted(object arg) {
            if ((this.FF_ManPower_DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_DeleteCompleted(this, new FF_ManPower_DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Insert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower FF_ManPower_Insert(string username, string password, FF_ManPower ManPower) {
            object[] results = this.Invoke("FF_ManPower_Insert", new object[] {
                        username,
                        password,
                        ManPower});
            return ((FF_ManPower)(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_InsertAsync(string username, string password, FF_ManPower ManPower) {
            this.FF_ManPower_InsertAsync(username, password, ManPower, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_InsertAsync(string username, string password, FF_ManPower ManPower, object userState) {
            if ((this.FF_ManPower_InsertOperationCompleted == null)) {
                this.FF_ManPower_InsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_InsertOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Insert", new object[] {
                        username,
                        password,
                        ManPower}, this.FF_ManPower_InsertOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_InsertOperationCompleted(object arg) {
            if ((this.FF_ManPower_InsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_InsertCompleted(this, new FF_ManPower_InsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FF_ManPower_Select_All", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FF_ManPower[] FF_ManPower_Select_All(string username, string password) {
            object[] results = this.Invoke("FF_ManPower_Select_All", new object[] {
                        username,
                        password});
            return ((FF_ManPower[])(results[0]));
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_AllAsync(string username, string password) {
            this.FF_ManPower_Select_AllAsync(username, password, null);
        }
        
        /// <remarks/>
        public void FF_ManPower_Select_AllAsync(string username, string password, object userState) {
            if ((this.FF_ManPower_Select_AllOperationCompleted == null)) {
                this.FF_ManPower_Select_AllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFF_ManPower_Select_AllOperationCompleted);
            }
            this.InvokeAsync("FF_ManPower_Select_All", new object[] {
                        username,
                        password}, this.FF_ManPower_Select_AllOperationCompleted, userState);
        }
        
        private void OnFF_ManPower_Select_AllOperationCompleted(object arg) {
            if ((this.FF_ManPower_Select_AllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FF_ManPower_Select_AllCompleted(this, new FF_ManPower_Select_AllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Buildings {
        
        private int buildingNumberField;
        
        private int floorsNumberField;
        
        private int companyIDField;
        
        private int buildingIDField;
        
        private int mainWaterTankCapacityField;
        
        private byte[] geometricImageField;
        
        private string geometricImageURLField;
        
        private Floors[] buildingFloorsField;
        
        /// <remarks/>
        public int BuildingNumber {
            get {
                return this.buildingNumberField;
            }
            set {
                this.buildingNumberField = value;
            }
        }
        
        /// <remarks/>
        public int FloorsNumber {
            get {
                return this.floorsNumberField;
            }
            set {
                this.floorsNumberField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public int MainWaterTankCapacity {
            get {
                return this.mainWaterTankCapacityField;
            }
            set {
                this.mainWaterTankCapacityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GeometricImage {
            get {
                return this.geometricImageField;
            }
            set {
                this.geometricImageField = value;
            }
        }
        
        /// <remarks/>
        public string GeometricImageURL {
            get {
                return this.geometricImageURLField;
            }
            set {
                this.geometricImageURLField = value;
            }
        }
        
        /// <remarks/>
        public Floors[] BuildingFloors {
            get {
                return this.buildingFloorsField;
            }
            set {
                this.buildingFloorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Floors {
        
        private string floorNumberField;
        
        private string fireHydrantsNumberField;
        
        private string powderExtinguishersNumberField;
        
        private string carbonDioxideExtinguishersNumbersField;
        
        private string foamExtinguishersNumbersField;
        
        private int powderExtinguishersWeightField;
        
        private int carbonDioxideExtinguishersWeightField;
        
        private int foamExtinguishersWeightField;
        
        private int buildingIDField;
        
        private int floorIDField;
        
        /// <remarks/>
        public string FloorNumber {
            get {
                return this.floorNumberField;
            }
            set {
                this.floorNumberField = value;
            }
        }
        
        /// <remarks/>
        public string FireHydrantsNumber {
            get {
                return this.fireHydrantsNumberField;
            }
            set {
                this.fireHydrantsNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PowderExtinguishersNumber {
            get {
                return this.powderExtinguishersNumberField;
            }
            set {
                this.powderExtinguishersNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CarbonDioxideExtinguishersNumbers {
            get {
                return this.carbonDioxideExtinguishersNumbersField;
            }
            set {
                this.carbonDioxideExtinguishersNumbersField = value;
            }
        }
        
        /// <remarks/>
        public string FoamExtinguishersNumbers {
            get {
                return this.foamExtinguishersNumbersField;
            }
            set {
                this.foamExtinguishersNumbersField = value;
            }
        }
        
        /// <remarks/>
        public int PowderExtinguishersWeight {
            get {
                return this.powderExtinguishersWeightField;
            }
            set {
                this.powderExtinguishersWeightField = value;
            }
        }
        
        /// <remarks/>
        public int CarbonDioxideExtinguishersWeight {
            get {
                return this.carbonDioxideExtinguishersWeightField;
            }
            set {
                this.carbonDioxideExtinguishersWeightField = value;
            }
        }
        
        /// <remarks/>
        public int FoamExtinguishersWeight {
            get {
                return this.foamExtinguishersWeightField;
            }
            set {
                this.foamExtinguishersWeightField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public int FloorID {
            get {
                return this.floorIDField;
            }
            set {
                this.floorIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FF_pumps {
        
        private int fF_pumpsIDField;
        
        private string sectorField;
        
        private string addressField;
        
        private string pumpNumberField;
        
        private string pumpTypeField;
        
        private string signsField;
        
        private string statusField;
        
        private string areaField;
        
        private string additional_infoField;
        
        private int userIDField;
        
        /// <remarks/>
        public int FF_pumpsID {
            get {
                return this.fF_pumpsIDField;
            }
            set {
                this.fF_pumpsIDField = value;
            }
        }
        
        /// <remarks/>
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string PumpNumber {
            get {
                return this.pumpNumberField;
            }
            set {
                this.pumpNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PumpType {
            get {
                return this.pumpTypeField;
            }
            set {
                this.pumpTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Signs {
            get {
                return this.signsField;
            }
            set {
                this.signsField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FFstations {
        
        private int fF_IDField;
        
        private string sectorField;
        
        private string areaNameField;
        
        private string streetField;
        
        private string zoneNumberField;
        
        private string signsField;
        
        private string officersNumberField;
        
        private string soliderNumberField;
        
        private string carsNumberField;
        
        private string equipmentsField;
        
        private string additional_infoField;
        
        private int userIDField;
        
        /// <remarks/>
        public int FF_ID {
            get {
                return this.fF_IDField;
            }
            set {
                this.fF_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string AreaName {
            get {
                return this.areaNameField;
            }
            set {
                this.areaNameField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string ZoneNumber {
            get {
                return this.zoneNumberField;
            }
            set {
                this.zoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Signs {
            get {
                return this.signsField;
            }
            set {
                this.signsField = value;
            }
        }
        
        /// <remarks/>
        public string OfficersNumber {
            get {
                return this.officersNumberField;
            }
            set {
                this.officersNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SoliderNumber {
            get {
                return this.soliderNumberField;
            }
            set {
                this.soliderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CarsNumber {
            get {
                return this.carsNumberField;
            }
            set {
                this.carsNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Equipments {
            get {
                return this.equipmentsField;
            }
            set {
                this.equipmentsField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Images {
        
        private string imageDescriptionField;
        
        private int buildingIDField;
        
        private byte[] imageField;
        
        private int imageIDField;
        
        private string imageURLField;
        
        /// <remarks/>
        public string ImageDescription {
            get {
                return this.imageDescriptionField;
            }
            set {
                this.imageDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int ImageID {
            get {
                return this.imageIDField;
            }
            set {
                this.imageIDField = value;
            }
        }
        
        /// <remarks/>
        public string ImageURL {
            get {
                return this.imageURLField;
            }
            set {
                this.imageURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Injured {
        
        private int injuredIDField;
        
        private string nameField;
        
        private int ageField;
        
        private string civil_MilitaryField;
        
        private string rankField;
        
        private System.DateTime dateField;
        
        private string additional_infoField;
        
        private int accidentIDField;
        
        /// <remarks/>
        public int InjuredID {
            get {
                return this.injuredIDField;
            }
            set {
                this.injuredIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string Civil_Military {
            get {
                return this.civil_MilitaryField;
            }
            set {
                this.civil_MilitaryField = value;
            }
        }
        
        /// <remarks/>
        public string Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int AccidentID {
            get {
                return this.accidentIDField;
            }
            set {
                this.accidentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users_Admin {
        
        private int admin_IDField;
        
        private int user_IDField;
        
        private string infoField;
        
        /// <remarks/>
        public int Admin_ID {
            get {
                return this.admin_IDField;
            }
            set {
                this.admin_IDField = value;
            }
        }
        
        /// <remarks/>
        public int User_ID {
            get {
                return this.user_IDField;
            }
            set {
                this.user_IDField = value;
            }
        }
        
        /// <remarks/>
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Users {
        
        private int userIDField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string infoField;
        
        private string adminModeField;
        
        private Company[] user_CompaniesField;
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public string AdminMode {
            get {
                return this.adminModeField;
            }
            set {
                this.adminModeField = value;
            }
        }
        
        /// <remarks/>
        public Company[] User_Companies {
            get {
                return this.user_CompaniesField;
            }
            set {
                this.user_CompaniesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Company {
        
        private string nameField;
        
        private string addressField;
        
        private string landlinePhoneNumberField;
        
        private string electricalPanelLocationField;
        
        private string oxygenTrapLocationField;
        
        private string gasTrapLocationField;
        
        private string rightCompanyNameField;
        
        private string rightCompanyBusinessField;
        
        private string leftCompanyNameField;
        
        private string leftCompanyBusinessField;
        
        private string frontCompanyNameField;
        
        private string frontCompanyBusinessField;
        
        private int companyIDField;
        
        private string backCompanyNameField;
        
        private string backCompanyBusinessField;
        
        private string frontFireMediatorField;
        
        private string leftFireMediatorField;
        
        private string backFireMediatorField;
        
        private string rightFireMediatorField;
        
        private int buildingsNumberField;
        
        private byte[] frontCompanyImageField;
        
        private byte[] backCompanyImageField;
        
        private byte[] rightCompanyImageField;
        
        private byte[] leftCompanyImageField;
        
        private int userIDField;
        
        private string frontCompanyImageURLField;
        
        private string backCompanyImageURLField;
        
        private string rightCompanyImageURLField;
        
        private string leftCompanyImageURLField;
        
        private float latitudeField;
        
        private float longitudeField;
        
        private Buildings[] companyBuildingsField;
        
        private Managers[] companyManagersField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string LandlinePhoneNumber {
            get {
                return this.landlinePhoneNumberField;
            }
            set {
                this.landlinePhoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string ElectricalPanelLocation {
            get {
                return this.electricalPanelLocationField;
            }
            set {
                this.electricalPanelLocationField = value;
            }
        }
        
        /// <remarks/>
        public string OxygenTrapLocation {
            get {
                return this.oxygenTrapLocationField;
            }
            set {
                this.oxygenTrapLocationField = value;
            }
        }
        
        /// <remarks/>
        public string GasTrapLocation {
            get {
                return this.gasTrapLocationField;
            }
            set {
                this.gasTrapLocationField = value;
            }
        }
        
        /// <remarks/>
        public string RightCompanyName {
            get {
                return this.rightCompanyNameField;
            }
            set {
                this.rightCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        public string RightCompanyBusiness {
            get {
                return this.rightCompanyBusinessField;
            }
            set {
                this.rightCompanyBusinessField = value;
            }
        }
        
        /// <remarks/>
        public string LeftCompanyName {
            get {
                return this.leftCompanyNameField;
            }
            set {
                this.leftCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        public string LeftCompanyBusiness {
            get {
                return this.leftCompanyBusinessField;
            }
            set {
                this.leftCompanyBusinessField = value;
            }
        }
        
        /// <remarks/>
        public string FrontCompanyName {
            get {
                return this.frontCompanyNameField;
            }
            set {
                this.frontCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        public string FrontCompanyBusiness {
            get {
                return this.frontCompanyBusinessField;
            }
            set {
                this.frontCompanyBusinessField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public string BackCompanyName {
            get {
                return this.backCompanyNameField;
            }
            set {
                this.backCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        public string BackCompanyBusiness {
            get {
                return this.backCompanyBusinessField;
            }
            set {
                this.backCompanyBusinessField = value;
            }
        }
        
        /// <remarks/>
        public string FrontFireMediator {
            get {
                return this.frontFireMediatorField;
            }
            set {
                this.frontFireMediatorField = value;
            }
        }
        
        /// <remarks/>
        public string LeftFireMediator {
            get {
                return this.leftFireMediatorField;
            }
            set {
                this.leftFireMediatorField = value;
            }
        }
        
        /// <remarks/>
        public string BackFireMediator {
            get {
                return this.backFireMediatorField;
            }
            set {
                this.backFireMediatorField = value;
            }
        }
        
        /// <remarks/>
        public string RightFireMediator {
            get {
                return this.rightFireMediatorField;
            }
            set {
                this.rightFireMediatorField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingsNumber {
            get {
                return this.buildingsNumberField;
            }
            set {
                this.buildingsNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FrontCompanyImage {
            get {
                return this.frontCompanyImageField;
            }
            set {
                this.frontCompanyImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] BackCompanyImage {
            get {
                return this.backCompanyImageField;
            }
            set {
                this.backCompanyImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] RightCompanyImage {
            get {
                return this.rightCompanyImageField;
            }
            set {
                this.rightCompanyImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] LeftCompanyImage {
            get {
                return this.leftCompanyImageField;
            }
            set {
                this.leftCompanyImageField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string FrontCompanyImageURL {
            get {
                return this.frontCompanyImageURLField;
            }
            set {
                this.frontCompanyImageURLField = value;
            }
        }
        
        /// <remarks/>
        public string BackCompanyImageURL {
            get {
                return this.backCompanyImageURLField;
            }
            set {
                this.backCompanyImageURLField = value;
            }
        }
        
        /// <remarks/>
        public string RightCompanyImageURL {
            get {
                return this.rightCompanyImageURLField;
            }
            set {
                this.rightCompanyImageURLField = value;
            }
        }
        
        /// <remarks/>
        public string LeftCompanyImageURL {
            get {
                return this.leftCompanyImageURLField;
            }
            set {
                this.leftCompanyImageURLField = value;
            }
        }
        
        /// <remarks/>
        public float Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public float Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public Buildings[] companyBuildings {
            get {
                return this.companyBuildingsField;
            }
            set {
                this.companyBuildingsField = value;
            }
        }
        
        /// <remarks/>
        public Managers[] companyManagers {
            get {
                return this.companyManagersField;
            }
            set {
                this.companyManagersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Managers {
        
        private string nameField;
        
        private string currentPositionField;
        
        private string phoneNumberField;
        
        private string infoField;
        
        private int companyIDField;
        
        private int managerIDField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string CurrentPosition {
            get {
                return this.currentPositionField;
            }
            set {
                this.currentPositionField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        public int ManagerID {
            get {
                return this.managerIDField;
            }
            set {
                this.managerIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DangerousPlaces {
        
        private string hazardousSubstanceField;
        
        private string locationField;
        
        private string fireMediatorField;
        
        private int companyIDField;
        
        private byte[] imageField;
        
        private int dangerousPlaceIDField;
        
        private string imageURLField;
        
        /// <remarks/>
        public string HazardousSubstance {
            get {
                return this.hazardousSubstanceField;
            }
            set {
                this.hazardousSubstanceField = value;
            }
        }
        
        /// <remarks/>
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        public string FireMediator {
            get {
                return this.fireMediatorField;
            }
            set {
                this.fireMediatorField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public int DangerousPlaceID {
            get {
                return this.dangerousPlaceIDField;
            }
            set {
                this.dangerousPlaceIDField = value;
            }
        }
        
        /// <remarks/>
        public string ImageURL {
            get {
                return this.imageURLField;
            }
            set {
                this.imageURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Death {
        
        private int deathIDField;
        
        private string nameField;
        
        private int ageField;
        
        private string civil_MilitaryField;
        
        private string rankField;
        
        private System.DateTime dateField;
        
        private string additional_infoField;
        
        private int accidentIDField;
        
        /// <remarks/>
        public int DeathID {
            get {
                return this.deathIDField;
            }
            set {
                this.deathIDField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int Age {
            get {
                return this.ageField;
            }
            set {
                this.ageField = value;
            }
        }
        
        /// <remarks/>
        public string Civil_Military {
            get {
                return this.civil_MilitaryField;
            }
            set {
                this.civil_MilitaryField = value;
            }
        }
        
        /// <remarks/>
        public string Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int AccidentID {
            get {
                return this.accidentIDField;
            }
            set {
                this.accidentIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ExitPathways {
        
        private byte[] pathwaysImageField;
        
        private string descriptionField;
        
        private int buildingIDField;
        
        private string pathwaysImageURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PathwaysImage {
            get {
                return this.pathwaysImageField;
            }
            set {
                this.pathwaysImageField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int BuildingID {
            get {
                return this.buildingIDField;
            }
            set {
                this.buildingIDField = value;
            }
        }
        
        /// <remarks/>
        public string PathwaysImageURL {
            get {
                return this.pathwaysImageURLField;
            }
            set {
                this.pathwaysImageURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FF_ManPower {
        
        private int fF_ManPowerIDField;
        
        private string sectorField;
        
        private string areaField;
        
        private string pointField;
        
        private string officerNameField;
        
        private string rankField;
        
        private string timeSlotField;
        
        private string availabilityField;
        
        private string jobField;
        
        private string additional_infoField;
        
        private int userIDField;
        
        private int fF_IDField;
        
        /// <remarks/>
        public int FF_ManPowerID {
            get {
                return this.fF_ManPowerIDField;
            }
            set {
                this.fF_ManPowerIDField = value;
            }
        }
        
        /// <remarks/>
        public string Sector {
            get {
                return this.sectorField;
            }
            set {
                this.sectorField = value;
            }
        }
        
        /// <remarks/>
        public string Area {
            get {
                return this.areaField;
            }
            set {
                this.areaField = value;
            }
        }
        
        /// <remarks/>
        public string Point {
            get {
                return this.pointField;
            }
            set {
                this.pointField = value;
            }
        }
        
        /// <remarks/>
        public string OfficerName {
            get {
                return this.officerNameField;
            }
            set {
                this.officerNameField = value;
            }
        }
        
        /// <remarks/>
        public string Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public string TimeSlot {
            get {
                return this.timeSlotField;
            }
            set {
                this.timeSlotField = value;
            }
        }
        
        /// <remarks/>
        public string Availability {
            get {
                return this.availabilityField;
            }
            set {
                this.availabilityField = value;
            }
        }
        
        /// <remarks/>
        public string Job {
            get {
                return this.jobField;
            }
            set {
                this.jobField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int FF_ID {
            get {
                return this.fF_IDField;
            }
            set {
                this.fF_IDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Accident {
        
        private int accidentIDField;
        
        private string accidentTypeField;
        
        private string vehiclesToAccidentField;
        
        private string equipmentsField;
        
        private string lossesTypeField;
        
        private string lossesInfoField;
        
        private System.DateTime dateField;
        
        private System.DateTime timeToSendField;
        
        private System.DateTime timeToArriveField;
        
        private string accidentNumberField;
        
        private string additional_infoField;
        
        private int companyIDField;
        
        /// <remarks/>
        public int AccidentID {
            get {
                return this.accidentIDField;
            }
            set {
                this.accidentIDField = value;
            }
        }
        
        /// <remarks/>
        public string AccidentType {
            get {
                return this.accidentTypeField;
            }
            set {
                this.accidentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string VehiclesToAccident {
            get {
                return this.vehiclesToAccidentField;
            }
            set {
                this.vehiclesToAccidentField = value;
            }
        }
        
        /// <remarks/>
        public string Equipments {
            get {
                return this.equipmentsField;
            }
            set {
                this.equipmentsField = value;
            }
        }
        
        /// <remarks/>
        public string LossesType {
            get {
                return this.lossesTypeField;
            }
            set {
                this.lossesTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LossesInfo {
            get {
                return this.lossesInfoField;
            }
            set {
                this.lossesInfoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeToSend {
            get {
                return this.timeToSendField;
            }
            set {
                this.timeToSendField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TimeToArrive {
            get {
                return this.timeToArriveField;
            }
            set {
                this.timeToArriveField = value;
            }
        }
        
        /// <remarks/>
        public string AccidentNumber {
            get {
                return this.accidentNumberField;
            }
            set {
                this.accidentNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Additional_info {
            get {
                return this.additional_infoField;
            }
            set {
                this.additional_infoField = value;
            }
        }
        
        /// <remarks/>
        public int CompanyID {
            get {
                return this.companyIDField;
            }
            set {
                this.companyIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_Select_AllCompletedEventHandler(object sender, Buildings_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_Select_By_BuildingIDCompletedEventHandler(object sender, Buildings_Select_By_BuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_Select_By_BuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_Select_By_BuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_Select_By_BuildingNumberCompletedEventHandler(object sender, Buildings_Select_By_BuildingNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_Select_By_BuildingNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_Select_By_BuildingNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_Select_By_CompanyIDCompletedEventHandler(object sender, Buildings_Select_By_CompanyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_Select_By_CompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_Select_By_CompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_Select_By_FloorsNumberCompletedEventHandler(object sender, Buildings_Select_By_FloorsNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_Select_By_FloorsNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_Select_By_FloorsNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_DeleteCompletedEventHandler(object sender, Accident_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_InsertCompletedEventHandler(object sender, Accident_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_AllCompletedEventHandler(object sender, Accident_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_AccidentNumberCompletedEventHandler(object sender, Accident_Select_By_AccidentNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_AccidentNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_AccidentNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_CompanyIDCompletedEventHandler(object sender, Accident_Select_By_CompanyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_CompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_CompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_DateCompletedEventHandler(object sender, Accident_Select_By_DateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_DateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_DateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_EquipmentsCompletedEventHandler(object sender, Accident_Select_By_EquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_EquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_EquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_IDCompletedEventHandler(object sender, Accident_Select_By_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_LossesTypeCompletedEventHandler(object sender, Accident_Select_By_LossesTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_LossesTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_LossesTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_TimeToArriveCompletedEventHandler(object sender, Accident_Select_By_TimeToArriveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_TimeToArriveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_TimeToArriveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_TimeToSendCompletedEventHandler(object sender, Accident_Select_By_TimeToSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_TimeToSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_TimeToSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_TypeCompletedEventHandler(object sender, Accident_Select_By_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Accident_Select_By_VehiclesToAccidentCompletedEventHandler(object sender, Accident_Select_By_VehiclesToAccidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Accident_Select_By_VehiclesToAccidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Accident_Select_By_VehiclesToAccidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Accident[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Accident[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_AreaCompletedEventHandler(object sender, FF_ManPower_Select_By_AreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_AreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_AreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_AvailabilityCompletedEventHandler(object sender, FF_ManPower_Select_By_AvailabilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_AvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_AvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_FF_ManPowerIDCompletedEventHandler(object sender, FF_ManPower_Select_By_FF_ManPowerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_FF_ManPowerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_FF_ManPowerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_JobCompletedEventHandler(object sender, FF_ManPower_Select_By_JobCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_JobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_JobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_OfficerNameCompletedEventHandler(object sender, FF_ManPower_Select_By_OfficerNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_OfficerNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_OfficerNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_PointCompletedEventHandler(object sender, FF_ManPower_Select_By_PointCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_PointCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_PointCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_RankCompletedEventHandler(object sender, FF_ManPower_Select_By_RankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_RankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_RankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_SectorCompletedEventHandler(object sender, FF_ManPower_Select_By_SectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_SectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_SectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_TimeSlotCompletedEventHandler(object sender, FF_ManPower_Select_By_TimeSlotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_TimeSlotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_TimeSlotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_UserIDCompletedEventHandler(object sender, FF_ManPower_Select_By_UserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_UserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_UserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_By_FF_IDCompletedEventHandler(object sender, FF_ManPower_Select_By_FF_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_By_FF_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_By_FF_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExitPathways_InsertCompletedEventHandler(object sender, ExitPathways_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExitPathways_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExitPathways_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExitPathways Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExitPathways)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExitPathways_Select_AllCompletedEventHandler(object sender, ExitPathways_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExitPathways_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExitPathways_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExitPathways[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExitPathways[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ExitPathways_Select_By_BuildingIDCompletedEventHandler(object sender, ExitPathways_Select_By_BuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExitPathways_Select_By_BuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExitPathways_Select_By_BuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExitPathways[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExitPathways[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_DeleteCompletedEventHandler(object sender, Death_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_InsertCompletedEventHandler(object sender, Death_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_AllCompletedEventHandler(object sender, Death_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_AccidentIDCompletedEventHandler(object sender, Death_Select_By_AccidentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_AccidentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_AccidentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_AgeCompletedEventHandler(object sender, Death_Select_By_AgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_AgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_AgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_Civil_MilitaryCompletedEventHandler(object sender, Death_Select_By_Civil_MilitaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_Civil_MilitaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_Civil_MilitaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_DateCompletedEventHandler(object sender, Death_Select_By_DateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_DateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_DateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_DeathIDCompletedEventHandler(object sender, Death_Select_By_DeathIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_DeathIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_DeathIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_NameCompletedEventHandler(object sender, Death_Select_By_NameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_NameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_NameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Death_Select_By_RankCompletedEventHandler(object sender, Death_Select_By_RankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Death_Select_By_RankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Death_Select_By_RankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Death[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Death[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_InsertCompletedEventHandler(object sender, DangerousPlaces_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_UpdateCompletedEventHandler(object sender, DangerousPlaces_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_AllCompletedEventHandler(object sender, DangerousPlaces_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_By_CompanyIDCompletedEventHandler(object sender, DangerousPlaces_Select_By_CompanyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_By_CompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_By_CompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_By_IDCompletedEventHandler(object sender, DangerousPlaces_Select_By_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_By_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_By_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_By_FireMediatorCompletedEventHandler(object sender, DangerousPlaces_Select_By_FireMediatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_By_FireMediatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_By_FireMediatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_By_HazardousSubstanceCompletedEventHandler(object sender, DangerousPlaces_Select_By_HazardousSubstanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_By_HazardousSubstanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_By_HazardousSubstanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DangerousPlaces_Select_By_LocationCompletedEventHandler(object sender, DangerousPlaces_Select_By_LocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DangerousPlaces_Select_By_LocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DangerousPlaces_Select_By_LocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DangerousPlaces[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DangerousPlaces[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_DeleteCompletedEventHandler(object sender, Company_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_InsertCompletedEventHandler(object sender, Company_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_UpdateCompletedEventHandler(object sender, Company_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_AllCompletedEventHandler(object sender, Company_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_AddressCompletedEventHandler(object sender, Company_Select_By_AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_BackCompanyBusinessCompletedEventHandler(object sender, Company_Select_By_BackCompanyBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_BackCompanyBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_BackCompanyBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_BackCompanyNameCompletedEventHandler(object sender, Company_Select_By_BackCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_BackCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_BackCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_BackFireMediatorCompletedEventHandler(object sender, Company_Select_By_BackFireMediatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_BackFireMediatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_BackFireMediatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_BuildingsNumberCompletedEventHandler(object sender, Company_Select_By_BuildingsNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_BuildingsNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_BuildingsNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_CompanyIDCompletedEventHandler(object sender, Company_Select_By_CompanyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_CompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_CompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_ElectricalPanelLocationCompletedEventHandler(object sender, Company_Select_By_ElectricalPanelLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_ElectricalPanelLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_ElectricalPanelLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_FrontCompanyBusinessCompletedEventHandler(object sender, Company_Select_By_FrontCompanyBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_FrontCompanyBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_FrontCompanyBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_FrontCompanyNameCompletedEventHandler(object sender, Company_Select_By_FrontCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_FrontCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_FrontCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_FrontFireMediatorCompletedEventHandler(object sender, Company_Select_By_FrontFireMediatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_FrontFireMediatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_FrontFireMediatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_GasTrapLocationCompletedEventHandler(object sender, Company_Select_By_GasTrapLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_GasTrapLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_GasTrapLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_LandlinePhoneNumberCompletedEventHandler(object sender, Company_Select_By_LandlinePhoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_LandlinePhoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_LandlinePhoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_LeftCompanyBusinessCompletedEventHandler(object sender, Company_Select_By_LeftCompanyBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_LeftCompanyBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_LeftCompanyBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_LeftCompanyNameCompletedEventHandler(object sender, Company_Select_By_LeftCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_LeftCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_LeftCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_LeftFireMediatorCompletedEventHandler(object sender, Company_Select_By_LeftFireMediatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_LeftFireMediatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_LeftFireMediatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_NameCompletedEventHandler(object sender, Company_Select_By_NameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_NameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_NameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_OxygenTrapLocationCompletedEventHandler(object sender, Company_Select_By_OxygenTrapLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_OxygenTrapLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_OxygenTrapLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_RightCompanyBusinessCompletedEventHandler(object sender, Company_Select_By_RightCompanyBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_RightCompanyBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_RightCompanyBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_RightCompanyNameCompletedEventHandler(object sender, Company_Select_By_RightCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_RightCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_RightCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_RightFireMediatorCompletedEventHandler(object sender, Company_Select_By_RightFireMediatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_RightFireMediatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_RightFireMediatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Company_Select_By_UserIDCompletedEventHandler(object sender, Company_Select_By_UserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Company_Select_By_UserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Company_Select_By_UserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Company[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Company[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Managers_DeleteCompletedEventHandler(object sender, Managers_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Managers_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Managers_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Managers_InsertCompletedEventHandler(object sender, Managers_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Managers_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Managers_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Managers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Managers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Managers_Select_AllCompletedEventHandler(object sender, Managers_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Managers_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Managers_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Managers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Managers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Managers_Select_By_CompanyIDCompletedEventHandler(object sender, Managers_Select_By_CompanyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Managers_Select_By_CompanyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Managers_Select_By_CompanyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Managers[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Managers[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Managers_SelectByManagerIDCompletedEventHandler(object sender, Managers_SelectByManagerIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Managers_SelectByManagerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Managers_SelectByManagerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Managers Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Managers)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_DeleteCompletedEventHandler(object sender, Buildings_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Buildings_InsertCompletedEventHandler(object sender, Buildings_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Buildings_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Buildings_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Buildings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Buildings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_DeleteCompletedEventHandler(object sender, Users_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_InsertCompletedEventHandler(object sender, Users_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Select_AllCompletedEventHandler(object sender, Users_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Select_Users_Of_UserCompletedEventHandler(object sender, Users_Select_Users_Of_UserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Select_Users_Of_UserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Select_Users_Of_UserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_SelectByUserIdCompletedEventHandler(object sender, Users_SelectByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_SelectByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_SelectByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_SelectByNamePassCompletedEventHandler(object sender, Users_SelectByNamePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_SelectByNamePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_SelectByNamePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_SelectByNameCompletedEventHandler(object sender, Users_SelectByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_SelectByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_SelectByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Select_Super_AdminCompletedEventHandler(object sender, Users_Select_Super_AdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Select_Super_AdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Select_Super_AdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Admin_DeleteCompletedEventHandler(object sender, Users_Admin_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Admin_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Admin_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Admin_InsertCompletedEventHandler(object sender, Users_Admin_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Admin_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Admin_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users_Admin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users_Admin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Admin_Select_AllCompletedEventHandler(object sender, Users_Admin_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Admin_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Admin_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users_Admin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users_Admin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Admin_SelectByAdminIdCompletedEventHandler(object sender, Users_Admin_SelectByAdminIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Admin_SelectByAdminIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Admin_SelectByAdminIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users_Admin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users_Admin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Users_Admin_SelectByUserIDCompletedEventHandler(object sender, Users_Admin_SelectByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Users_Admin_SelectByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Users_Admin_SelectByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Users_Admin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Users_Admin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_DeleteCompletedEventHandler(object sender, Injured_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_InsertCompletedEventHandler(object sender, Injured_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_AllCompletedEventHandler(object sender, Injured_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_AccidentIDCompletedEventHandler(object sender, Injured_Select_By_AccidentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_AccidentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_AccidentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_AgeCompletedEventHandler(object sender, Injured_Select_By_AgeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_AgeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_AgeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_Civil_MilitaryCompletedEventHandler(object sender, Injured_Select_By_Civil_MilitaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_Civil_MilitaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_Civil_MilitaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_DateCompletedEventHandler(object sender, Injured_Select_By_DateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_DateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_DateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_InjuredIDCompletedEventHandler(object sender, Injured_Select_By_InjuredIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_InjuredIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_InjuredIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_NameCompletedEventHandler(object sender, Injured_Select_By_NameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_NameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_NameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Injured_Select_By_RankCompletedEventHandler(object sender, Injured_Select_By_RankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Injured_Select_By_RankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Injured_Select_By_RankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Injured[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Injured[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Images_InsertCompletedEventHandler(object sender, Images_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Images_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Images_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Images Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Images)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Images_Select_AllCompletedEventHandler(object sender, Images_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Images_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Images_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Images[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Images[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Images_Select_By_BuildingIDCompletedEventHandler(object sender, Images_Select_By_BuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Images_Select_By_BuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Images_Select_By_BuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Images[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Images[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Images_Select_By_ImageDescriptionCompletedEventHandler(object sender, Images_Select_By_ImageDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Images_Select_By_ImageDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Images_Select_By_ImageDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Images[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Images[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_InsertCompletedEventHandler(object sender, Floors_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_UpdateCompletedEventHandler(object sender, Floors_UpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_AllCompletedEventHandler(object sender, Floors_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_BuildingIDCompletedEventHandler(object sender, Floors_Select_By_BuildingIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_BuildingIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_BuildingIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventHandler(object sender, Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_CarbonDioxideExtinguishersNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_PowderExtinguishersNumberCompletedEventHandler(object sender, Floors_Select_By_PowderExtinguishersNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_PowderExtinguishersNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_PowderExtinguishersNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_FoamExtinguishersNumbersCompletedEventHandler(object sender, Floors_Select_By_FoamExtinguishersNumbersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_FoamExtinguishersNumbersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_FoamExtinguishersNumbersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_PowderExtinguishersWeightCompletedEventHandler(object sender, Floors_Select_By_PowderExtinguishersWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_PowderExtinguishersWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_PowderExtinguishersWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventHandler(object sender, Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_CarbonDioxideExtinguishersWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void Floors_Select_By_FoamExtinguishersWeightCompletedEventHandler(object sender, Floors_Select_By_FoamExtinguishersWeightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Floors_Select_By_FoamExtinguishersWeightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Floors_Select_By_FoamExtinguishersWeightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Floors[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Floors[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_DeleteCompletedEventHandler(object sender, FFstations_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_InsertCompletedEventHandler(object sender, FFstations_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_AllCompletedEventHandler(object sender, FFstations_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_AreaNameCompletedEventHandler(object sender, FFstations_Select_By_AreaNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_AreaNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_AreaNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_CarsNumberCompletedEventHandler(object sender, FFstations_Select_By_CarsNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_CarsNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_CarsNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_EquipmentsCompletedEventHandler(object sender, FFstations_Select_By_EquipmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_EquipmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_EquipmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_FF_IDCompletedEventHandler(object sender, FFstations_Select_By_FF_IDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_FF_IDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_FF_IDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_OfficersNumberCompletedEventHandler(object sender, FFstations_Select_By_OfficersNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_OfficersNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_OfficersNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_SectorCompletedEventHandler(object sender, FFstations_Select_By_SectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_SectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_SectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_SignsCompletedEventHandler(object sender, FFstations_Select_By_SignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_SignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_SignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_SoliderNumberCompletedEventHandler(object sender, FFstations_Select_By_SoliderNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_SoliderNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_SoliderNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_StreetCompletedEventHandler(object sender, FFstations_Select_By_StreetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_StreetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_StreetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_UserIDCompletedEventHandler(object sender, FFstations_Select_By_UserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_UserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_UserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FFstations_Select_By_ZoneNumberCompletedEventHandler(object sender, FFstations_Select_By_ZoneNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FFstations_Select_By_ZoneNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FFstations_Select_By_ZoneNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FFstations[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FFstations[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_DeleteCompletedEventHandler(object sender, FF_pumps_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_InsertCompletedEventHandler(object sender, FF_pumps_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_AllCompletedEventHandler(object sender, FF_pumps_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_AddressCompletedEventHandler(object sender, FF_pumps_Select_By_AddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_AddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_AddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_AreaCompletedEventHandler(object sender, FF_pumps_Select_By_AreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_AreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_AreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_FF_pumpsIDCompletedEventHandler(object sender, FF_pumps_Select_By_FF_pumpsIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_FF_pumpsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_FF_pumpsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_PumpNumberCompletedEventHandler(object sender, FF_pumps_Select_By_PumpNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_PumpNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_PumpNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_SectorCompletedEventHandler(object sender, FF_pumps_Select_By_SectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_SectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_SectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_SignsCompletedEventHandler(object sender, FF_pumps_Select_By_SignsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_SignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_SignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_pumps_Select_By_StatusCompletedEventHandler(object sender, FF_pumps_Select_By_StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_pumps_Select_By_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_pumps_Select_By_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_pumps[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_pumps[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_DeleteCompletedEventHandler(object sender, FF_ManPower_DeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_InsertCompletedEventHandler(object sender, FF_ManPower_InsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_InsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_InsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void FF_ManPower_Select_AllCompletedEventHandler(object sender, FF_ManPower_Select_AllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FF_ManPower_Select_AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FF_ManPower_Select_AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FF_ManPower[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FF_ManPower[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591